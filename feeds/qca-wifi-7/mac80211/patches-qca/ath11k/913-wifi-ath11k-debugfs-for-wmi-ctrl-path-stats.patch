From 1bc7579cb08fcf25c671cc17afb74af6da4a84cf Mon Sep 17 00:00:00 2001
From: Balamurugan Ramar <quic_bramar@quicinc.com>
Date: Thu, 3 Oct 2024 10:30:28 +0530
Subject: [PATCH] wifi: ath11k: fix the wmi ctrl path stats debugfs file
creation

wmi control path stats are based on pdev. But current
implementation is vif based and failed to create a debugfs file
in the "/sys/kernel/debug/ath11k/ahb-c000000.wifi/mac0" path.
It is properly added for ath12k. Modify ath11k as similar to ath12k.

Signed-off-by: Balamurugan Ramar <quic_bramar@quicinc.com>
---
 drivers/net/wireless/ath/ath11k/core.h    |  4 +-
 drivers/net/wireless/ath/ath11k/debugfs.c | 52 +++++++++++++----------
 drivers/net/wireless/ath/ath11k/debugfs.h |  1 -
 drivers/net/wireless/ath/ath11k/mac.c     | 10 -----
 4 files changed, 32 insertions(+), 35 deletions(-)

diff --git a/drivers/net/wireless/ath/ath11k/core.h b/drivers/net/wireless/ath/ath11k/core.h
index 5988911..fcf615a 100644
--- a/drivers/net/wireless/ath/ath11k/core.h
+++ b/drivers/net/wireless/ath/ath11k/core.h
@@ -503,7 +503,6 @@ struct ath11k_vif {
 	struct dentry *debugfs_twt;
 	struct dentry *ampdu_aggr_size;
 	struct dentry *amsdu_aggr_size;
-	struct dentry *wmi_ctrl_stat;
 	struct dentry *mac_filter;
 	struct dentry *wbm_tx_completion_stats;
 #endif /* CPTCFG_ATH11K_DEBUGFS */
@@ -1088,6 +1087,9 @@ struct ath11k {
 	s8 max_allowed_tx_power;
 	struct cfg80211_chan_def agile_chandef;
 	struct list_head fw_stats_pdevs;
+#ifdef CPTCFG_ATH11K_DEBUGFS
+	struct dentry *wmi_ctrl_stat;
+#endif
 };
 
 struct ath11k_band_cap {
diff --git a/drivers/net/wireless/ath/ath11k/debugfs.c b/drivers/net/wireless/ath/ath11k/debugfs.c
index 3a007b8..52bb8c8 100644
--- a/drivers/net/wireless/ath/ath11k/debugfs.c
+++ b/drivers/net/wireless/ath/ath11k/debugfs.c
@@ -22,6 +22,7 @@
 struct dentry *debugfs_ath11k;
 struct dentry *debugfs_debug_infra;
 
+void ath11k_debugfs_wmi_ctrl_stats(struct ath11k *ar);
 static const char *htt_bp_umac_ring[HTT_SW_UMAC_RING_IDX_MAX] = {
 	"REO2SW1_RING",
 	"REO2SW2_RING",
@@ -4629,6 +4630,7 @@ int ath11k_debugfs_register(struct ath11k *ar)
 
 	ath11k_debugfs_htt_stats_init(ar);
 
+	ath11k_debugfs_wmi_ctrl_stats(ar);
 	ath11k_debugfs_fw_stats_init(ar);
 	ath11k_init_tx_latency_stats(ar);
 	ath11k_init_pktlog(ar);
@@ -4760,6 +4762,10 @@ void ath11k_debugfs_unregister(struct ath11k *ar)
 	}
 
 	ath11k_deinit_pktlog(ar);
+	/* Remove wmi ctrl stats file */
+	debugfs_remove(ar->wmi_ctrl_stat);
+	ar->wmi_ctrl_stat = NULL;
+
 	kfree(ar->debug.tx_delay_stats[0]);
 	debugfs_remove_recursive(ar->debug.debugfs_pdev);
 	ar->debug.debugfs_pdev = NULL;
@@ -5016,7 +5022,7 @@ static ssize_t ath11k_write_wmi_ctrl_path_stats(struct file *file,
 		const char __user *ubuf,
 		size_t count, loff_t *ppos)
 {
-	struct ath11k_vif *arvif = file->private_data;
+	struct ath11k *ar = file->private_data;
 	struct wmi_ctrl_path_stats_cmd_param param = {0};
 	u8 buf[128] = {0};
 	int ret;
@@ -5035,11 +5041,11 @@ static ssize_t ath11k_write_wmi_ctrl_path_stats(struct file *file,
 	if (!param.action || param.action > WMI_REQ_CTRL_PATH_STAT_RESET)
 		return -EINVAL;
 
-	ret = ath11k_wmi_send_wmi_ctrl_stats_cmd(arvif->ar, &param);
+	ret = ath11k_wmi_send_wmi_ctrl_stats_cmd(ar, &param);
 	return ret ? ret : count;
 }
 
-int wmi_ctrl_path_pdev_stat(struct ath11k_vif *arvif, const char __user *ubuf,
+int wmi_ctrl_path_pdev_stat(struct ath11k *ar, const char __user *ubuf,
 			    size_t count, loff_t *ppos)
 {
 	const int size = 2048;
@@ -5057,7 +5063,7 @@ int wmi_ctrl_path_pdev_stat(struct ath11k_vif *arvif, const char __user *ubuf,
 	if (!buf)
 		return -ENOMEM;
 
-	list_for_each_entry (stats, &arvif->ar->debug.wmi_list, list) {
+	list_for_each_entry (stats, &ar->debug.wmi_list, list) {
 		if (!stats) {
 			break;
 		}
@@ -5108,12 +5114,12 @@ int wmi_ctrl_path_pdev_stat(struct ath11k_vif *arvif, const char __user *ubuf,
 	}
 
 	ret_val =  simple_read_from_buffer(ubuf, count, ppos, buf, len);
-	ath11k_wmi_crl_path_stats_list_free(&arvif->ar->debug.wmi_list);
+	ath11k_wmi_crl_path_stats_list_free(&ar->debug.wmi_list);
 	kfree(buf);
 	return ret_val;
 }
 
-int wmi_ctrl_path_cal_stat(struct ath11k_vif *arvif, const char __user *ubuf,
+int wmi_ctrl_path_cal_stat(struct ath11k *ar, const char __user *ubuf,
 			   size_t count, loff_t *ppos)
 {
 	const int size = 4096;
@@ -5135,7 +5141,7 @@ int wmi_ctrl_path_cal_stat(struct ath11k_vif *arvif, const char __user *ubuf,
 			 "cal_triggered_cnt", "cal_fail_cnt",
 			 "cal_fcs_cnt", "cal_fcs_fail_cnt");
 
-	list_for_each_entry (stats, &arvif->ar->debug.wmi_list, list) {
+	list_for_each_entry (stats, &ar->debug.wmi_list, list) {
 		if (!stats)
 			break;
 
@@ -5177,12 +5183,12 @@ int wmi_ctrl_path_cal_stat(struct ath11k_vif *arvif, const char __user *ubuf,
 	}
 
 	ret_val =  simple_read_from_buffer(ubuf, count, ppos, buf, len);
-	ath11k_wmi_crl_path_stats_list_free(&arvif->ar->debug.wmi_list);
+	ath11k_wmi_crl_path_stats_list_free(&ar->debug.wmi_list);
 	kfree(buf);
 	return ret_val;
 }
 
-int wmi_ctrl_path_btcoex_stat(struct ath11k_vif *arvif, const char __user *ubuf,
+int wmi_ctrl_path_btcoex_stat(struct ath11k *ar, const char __user *ubuf,
 			      size_t count, loff_t *ppos)
 {
 	struct wmi_ctrl_path_stats_list *stats;
@@ -5195,7 +5201,7 @@ int wmi_ctrl_path_btcoex_stat(struct ath11k_vif *arvif, const char __user *ubuf,
 	if (!buf)
 		return -ENOMEM;
 
-	list_for_each_entry(stats, &arvif->ar->debug.wmi_list, list) {
+	list_for_each_entry(stats, &ar->debug.wmi_list, list) {
 		if (!stats)
 			break;
 
@@ -5239,7 +5245,7 @@ int wmi_ctrl_path_btcoex_stat(struct ath11k_vif *arvif, const char __user *ubuf,
 	}
 
 	ret_val =  simple_read_from_buffer(ubuf, count, ppos, buf, len);
-	ath11k_wmi_crl_path_stats_list_free(&arvif->ar->debug.wmi_list);
+	ath11k_wmi_crl_path_stats_list_free(&ar->debug.wmi_list);
 	kfree(buf);
 	return ret_val;
 }
@@ -5248,21 +5254,21 @@ static ssize_t ath11k_read_wmi_ctrl_path_stats(struct file *file,
 		const char __user *ubuf,
 		size_t count, loff_t *ppos)
 {
-	struct ath11k_vif *arvif = file->private_data;
+	struct ath11k *ar = file->private_data;
 	int ret_val = 0;
 	u32 tagid = 0;
 
-	tagid = arvif->ar->debug.wmi_ctrl_path_stats_tagid;
+	tagid = ar->debug.wmi_ctrl_path_stats_tagid;
 
 	switch (tagid) {
 	case WMI_CTRL_PATH_PDEV_STATS:
-		ret_val = wmi_ctrl_path_pdev_stat(arvif, ubuf, count, ppos);
+		ret_val = wmi_ctrl_path_pdev_stat(ar, ubuf, count, ppos);
 		break;
 	case WMI_CTRL_PATH_CAL_STATS:
-		ret_val = wmi_ctrl_path_cal_stat(arvif, ubuf, count, ppos);
+		ret_val = wmi_ctrl_path_cal_stat(ar, ubuf, count, ppos);
 		break;
 	case WMI_CTRL_PATH_BTCOEX_STATS:
-		ret_val = wmi_ctrl_path_btcoex_stat(arvif, ubuf, count, ppos);
+		ret_val = wmi_ctrl_path_btcoex_stat(ar, ubuf, count, ppos);
 		break;
 	/* Add case for newly wmi ctrl path added stats here */
 	default :
@@ -5390,14 +5396,14 @@ void ath11k_debugfs_dbg_mac_filter(struct ath11k_vif *arvif)
 	INIT_LIST_HEAD(&arvif->mac_filters);
 }
 
-void ath11k_debugfs_wmi_ctrl_stats(struct ath11k_vif *arvif)
+void ath11k_debugfs_wmi_ctrl_stats(struct ath11k *ar)
 {
-	arvif->wmi_ctrl_stat = debugfs_create_file("wmi_ctrl_stats", 0644,
-						   arvif->vif->debugfs_dir,
-						   arvif,
-						   &ath11k_fops_wmi_ctrl_stats);
-	INIT_LIST_HEAD(&arvif->ar->debug.wmi_list);
-	init_completion(&arvif->ar->debug.wmi_ctrl_path_stats_rcvd);
+	ar->wmi_ctrl_stat = debugfs_create_file("wmi_ctrl_stats", 0644,
+					        ar->debug.debugfs_pdev,
+						ar,
+						&ath11k_fops_wmi_ctrl_stats);
+	INIT_LIST_HEAD(&ar->debug.wmi_list);
+	init_completion(&ar->debug.wmi_ctrl_path_stats_rcvd);
 }
 
 static ssize_t ath11k_wbm_tx_comp_stats_read(struct file *file,
diff --git a/drivers/net/wireless/ath/ath11k/debugfs.h b/drivers/net/wireless/ath/ath11k/debugfs.h
index 16c0584..7b7663a 100644
--- a/drivers/net/wireless/ath/ath11k/debugfs.h
+++ b/drivers/net/wireless/ath/ath11k/debugfs.h
@@ -335,7 +335,6 @@ struct ath11k_fw_dbglog {
 
 void ath11k_debugfs_wbm_tx_comp_stats(struct ath11k_vif *arvif);
 void ath11k_debug_aggr_size_config_init(struct ath11k_vif *arvif);
-void ath11k_debugfs_wmi_ctrl_stats(struct ath11k_vif *arvif);
 void ath11k_wmi_crl_path_stats_list_free(struct list_head *head);
 
 #ifdef CPTCFG_ATH11K_DEBUGFS
diff --git a/drivers/net/wireless/ath/ath11k/mac.c b/drivers/net/wireless/ath/ath11k/mac.c
index 2380f61..29ee1a4 100644
--- a/drivers/net/wireless/ath/ath11k/mac.c
+++ b/drivers/net/wireless/ath/ath11k/mac.c
@@ -8389,7 +8389,6 @@ void ath11k_debugfs_per_arvif(struct ath11k_vif *arvif)
 	ath11k_debugfs_dbg_mac_filter(arvif);
 	ath11k_debugfs_wbm_tx_comp_stats(arvif);
 	ath11k_debug_aggr_size_config_init(arvif);
-	ath11k_debugfs_wmi_ctrl_stats(arvif);
 }
 
 static int ath11k_mac_op_add_interface(struct ieee80211_hw *hw,
@@ -8686,7 +8685,6 @@ static int ath11k_mac_op_add_interface(struct ieee80211_hw *hw,
 		ath11k_warn(ar->ab, "failed to set ap ps ret %d\n", ret);
 
 	ath11k_debug_aggr_size_config_init(arvif);
-        ath11k_debugfs_wmi_ctrl_stats(arvif);
 
 	/* Remove A-MPDU, A-MSDU aggr size files */
 	debugfs_remove(arvif->ampdu_aggr_size);
@@ -8695,10 +8693,6 @@ static int ath11k_mac_op_add_interface(struct ieee80211_hw *hw,
 	debugfs_remove(arvif->amsdu_aggr_size);
 	arvif->amsdu_aggr_size = NULL;
 
-	/* Remove wmi ctrl stats file */
-	debugfs_remove(arvif->wmi_ctrl_stat);
-	arvif->wmi_ctrl_stat = NULL;
-
 	if (arvif->vif->debugfs_dir)
 		ath11k_debugfs_per_arvif(arvif);
 
@@ -8763,10 +8757,6 @@ void ath11k_mac_debugfs_remove_stats_file(struct ath11k_vif *arvif)
 	debugfs_remove(arvif->amsdu_aggr_size);
 	arvif->amsdu_aggr_size = NULL;
 
-	/* Remove wmi ctrl stats file */
-	debugfs_remove(arvif->wmi_ctrl_stat);
-	arvif->wmi_ctrl_stat = NULL;
-
 	/* Remove the mac filter file */
 	debugfs_remove(arvif->mac_filter);
 	arvif->mac_filter = NULL;
-- 
2.34.1

