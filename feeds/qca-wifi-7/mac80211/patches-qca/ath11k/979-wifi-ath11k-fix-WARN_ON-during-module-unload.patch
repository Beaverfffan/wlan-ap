From 766362ab775c13ee00f112e39e153f7d58238557 Mon Sep 17 00:00:00 2001
From: Aaradhana Sahu <quic_aarasahu@quicinc.com>
Date: Sat, 26 Oct 2024 11:19:18 +0530
Subject: [PATCH] wifi: ath11k: fix WARN_ON during module unload

Some architectures don't use mon_reap_timer, so mon_reap_timer
are not initialized. But in rmmod/shutdown path try to delete
mon_reap_timer, for such architectures due to this below
warn_on triggered:

ODEBUG: assert_init not available (active state 0) object type: timer_list hint: 0x0
 CPU: 1 PID: 5940 Comm: procd Tainted: G        W          6.1.31 #0
 pstate: 60400005 (nZCv daif +PAN -UAO -TCO -DIT -SSBS BTYPE=--)
 pc : debug_print_object+0x8c/0xb8
 lr : debug_print_object+0x8c/0xb8
 Call trace:
  debug_print_object+0x8c/0xb8
  debug_object_assert_init+0xd4/0x120
  try_to_del_timer_sync+0x30/0xa0
  del_timer_sync+0x34/0x4c
  ath11k_dp_pdev_free+0x28/0x88 [ath11k]
  ath11k_core_deinit+0x64/0xe0 [ath11k]
  0xffffffc00169ebf4
  platform_shutdown+0x20/0x2c
  device_shutdown+0x14c/0x1b4
  kernel_restart_prepare+0x34/0x3c
  kernel_restart+0x14/0x74
  __se_sys_reboot+0x180/0x1e8
  __arm64_sys_reboot+0x18/0x20
  el0_svc_common.constprop.0+0xc0/0x130
  do_el0_svc+0x18/0x20
  el0_svc+0x14/0x3c
  el0t_64_sync_handler+0xa8/0x134
  el0t_64_sync+0x14c/0x150

Signed-off-by: Aaradhana Sahu <quic_aarasahu@quicinc.com>
---
 drivers/net/wireless/ath/ath11k/dp.c    |  3 ++-
 drivers/net/wireless/ath/ath11k/dp_rx.c | 16 ++++++++++------
 2 files changed, 12 insertions(+), 7 deletions(-)

diff --git a/drivers/net/wireless/ath/ath11k/dp.c b/drivers/net/wireless/ath/ath11k/dp.c
index 4bc5991..8a40a9b 100644
--- a/drivers/net/wireless/ath/ath11k/dp.c
+++ b/drivers/net/wireless/ath/ath11k/dp.c
@@ -987,7 +987,8 @@ void ath11k_dp_pdev_free(struct ath11k_base *ab, bool ureg_dbgfs)
 	struct ath11k *ar;
 	int i;
 
-	del_timer_sync(&ab->mon_reap_timer);
+	if (!ab->hw_params.rxdma1_enable)
+		del_timer_sync(&ab->mon_reap_timer);
 
 	for (i = 0; i < ab->num_radios; i++) {
 		ar = ab->pdevs[i].ar;
diff --git a/drivers/net/wireless/ath/ath11k/dp_rx.c b/drivers/net/wireless/ath/ath11k/dp_rx.c
index be8bfe0..d5e6e7a 100644
--- a/drivers/net/wireless/ath/ath11k/dp_rx.c
+++ b/drivers/net/wireless/ath/ath11k/dp_rx.c
@@ -353,8 +353,9 @@ static void ath11k_dp_service_mon_ring(struct timer_list *t)
 	for (i = 0; i < ab->hw_params.num_rxmda_per_pdev; i++)
 		ath11k_dp_rx_process_mon_rings(ab, i, NULL, DP_MON_SERVICE_BUDGET);
 
-	mod_timer(&ab->mon_reap_timer, jiffies +
-		  msecs_to_jiffies(ATH11K_MON_TIMER_INTERVAL));
+	if (!ab->hw_params.rxdma1_enable)
+		mod_timer(&ab->mon_reap_timer, jiffies +
+			  msecs_to_jiffies(ATH11K_MON_TIMER_INTERVAL));
 }
 
 static int ath11k_dp_purge_mon_ring(struct ath11k_base *ab)
@@ -7100,8 +7101,9 @@ int ath11k_dp_rx_pdev_mon_detach(struct ath11k *ar)
 int ath11k_dp_rx_pktlog_start(struct ath11k_base *ab)
 {
 	/* start reap timer */
-	mod_timer(&ab->mon_reap_timer,
-		  jiffies + msecs_to_jiffies(ATH11K_MON_TIMER_INTERVAL));
+	if (!ab->hw_params.rxdma1_enable)
+		mod_timer(&ab->mon_reap_timer,
+			  jiffies + msecs_to_jiffies(ATH11K_MON_TIMER_INTERVAL));
 
 	return 0;
 }
@@ -7110,8 +7112,10 @@ int ath11k_dp_rx_pktlog_stop(struct ath11k_base *ab, bool stop_timer)
 {
 	int ret;
 
-	if (stop_timer)
-		del_timer_sync(&ab->mon_reap_timer);
+	if (!ab->hw_params.rxdma1_enable) {
+		if (stop_timer)
+			del_timer_sync(&ab->mon_reap_timer);
+	}
 
 	/* reap all the monitor related rings */
 	ret = ath11k_dp_purge_mon_ring(ab);
-- 
2.34.1

