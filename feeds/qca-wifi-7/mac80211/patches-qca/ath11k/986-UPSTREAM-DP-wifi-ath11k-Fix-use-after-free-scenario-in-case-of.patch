From 506e23572db13b0cd3e7fb9b7aa915e3a2a1cf34 Mon Sep 17 00:00:00 2001
From: Avula Sri Charan <quic_asrichar@quicinc.com>
Date: Sat, 26 Oct 2024 19:15:39 +0530
Subject: UPSTREAM:DP:wifi: ath11k: Fix use after free scenario in case of
failure in setting packet length

When pskb_expand_head fails while setting packet length, skb is getting
freed in ath11k_dp_pkt_set_pktlen but driver is queuing this msdu and
forwarding it to upper layer which is leading to corruption.

Fix it by avoiding the skb free from ath11k_dp_pkt_set_pktlen and free
the msdu in callee function followed by dropping it.


Patch-dependency: None

Signed-off-by: P Praneesh <quic_ppranees@quicinc.com>
Signed-off-by: Avula Sri Charan <quic_asrichar@quicinc.com>
---
 drivers/net/wireless/ath/ath11k/dp_rx.c | 1 -
 1 file changed, 1 deletion(-)

--- a/drivers/net/wireless/ath/ath11k/dp_rx.c
+++ b/drivers/net/wireless/ath/ath11k/dp_rx.c
@@ -5772,7 +5772,6 @@ static int ath11k_dp_pkt_set_pktlen(stru
 			if ((pskb_expand_head(skb, 0,
 					      len - skb->len - skb_tailroom(skb),
 					      GFP_ATOMIC))) {
-				dev_kfree_skb_any(skb);
 				return -ENOMEM;
 			}
 		}
@@ -6015,7 +6014,11 @@ ath11k_dp_rx_mon_mpdu_pop(struct ath11k
 						  &frag_len, &msdu_cnt);
 			rx_buf_size = rx_pkt_offset + l2_hdr_offset + frag_len;
 
-			ath11k_dp_pkt_set_pktlen(msdu, rx_buf_size);
+			if (ath11k_dp_pkt_set_pktlen(msdu, rx_buf_size)) {
+				dev_kfree_skb_any(msdu);
+				msdu = NULL;
+				goto next_msdu;
+			}
 
 			if (!(*head_msdu))
 				*head_msdu = msdu;
@@ -6776,7 +6779,11 @@ ath11k_dp_rx_full_mon_mpdu_pop(struct at
 
 			rx_buf_size = rx_pkt_offset + l2_hdr_offset + frag_len;
 
-			ath11k_dp_pkt_set_pktlen(msdu, rx_buf_size);
+			if (ath11k_dp_pkt_set_pktlen(msdu, rx_buf_size)) {
+				dev_kfree_skb_any(msdu);
+				msdu = NULL;
+				goto next_msdu;
+			}
 
 			if (!(*head_msdu))
 				*head_msdu = msdu;
