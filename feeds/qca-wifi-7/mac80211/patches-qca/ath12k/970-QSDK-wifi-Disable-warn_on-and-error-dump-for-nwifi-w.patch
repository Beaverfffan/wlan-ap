From 38003f0f7211c382c0c72b2eb9ade198f346c9aa Mon Sep 17 00:00:00 2001
From: Vinith Kumar R <quic_vinithku@quicinc.com>
Date: Mon, 12 Aug 2024 23:20:33 +0530
Subject: [PATCH] QSDK: wifi: Disable warn_on and error dump for nwifi mode

Currently, for native wifi mode, if packet header length exceeds the
threshold value 30, then warn_on will hit. With this handling, facing
panic_on_warn_on for the corrupted packet due to header length
exceeding the threshold value. So, as a workaround, disabling warn_on
call and error dump with the module param flag for native wifi mode.

Patch-dependency: 683-ath12k-Debug-prints-to-prevent-buffer-overflow.patch

Signed-off-by: Vinith Kumar R <quic_vinithku@quicinc.com>
---
 drivers/net/wireless/ath/ath12k/core.c  |  5 +++++
 drivers/net/wireless/ath/ath12k/core.h  |  1 +
 drivers/net/wireless/ath/ath12k/dp_rx.c | 14 +++++++++-----
 3 files changed, 15 insertions(+), 5 deletions(-)

--- a/drivers/net/wireless/ath/ath12k/core.c
+++ b/drivers/net/wireless/ath/ath12k/core.c
@@ -91,6 +91,11 @@ module_param_array_named(rfs_core_mask,
 MODULE_PARM_DESC(rfs_core_mask, "Default RFS core mask, mask for 2G, mask for 5G,\n"
 		 "mask for 6G. One bit for one CPU core\n");
 
+bool ath12k_rx_nwifi_err_dump = false;
+module_param_named(rx_nwifi_err_dump, ath12k_rx_nwifi_err_dump, bool, 0644);
+MODULE_PARM_DESC(rx_nwifi_err_dump,
+                 "rx nwifi err dump: 0-disable, 1-enable");
+
 static DEFINE_MUTEX(ath12k_hw_lock);
 static struct list_head ath12k_hw_groups = LIST_HEAD_INIT(ath12k_hw_groups);
 
--- a/drivers/net/wireless/ath/ath12k/core.h
+++ b/drivers/net/wireless/ath/ath12k/core.h
@@ -55,6 +55,7 @@
 extern unsigned int ath12k_frame_mode;
 extern bool ath12k_erp_support;
 extern unsigned int ath12k_ppe_ds_enabled;
+extern bool ath12k_rx_nwifi_err_dump;
 
 #define ATH12K_MAX_CORE_MASK	(0xFFFF & ((1 << NR_CPUS) - 1))
 extern unsigned int ath12k_rfs_core_mask[4];
--- a/drivers/net/wireless/ath/ath12k/dp_rx.c
+++ b/drivers/net/wireless/ath/ath12k/dp_rx.c
@@ -3482,10 +3482,12 @@ static bool ath12k_dp_rx_check_max_nwifi
 	hdr_len = ieee80211_hdrlen(hdr->frame_control);
 	if (unlikely(hdr_len > DP_MAX_NWIFI_HDR_LEN)) {
 		ab->soc_stats.invalid_rbm++;
-		ath12k_err_dump(ab, msg, "msdu_data: ", msdu->data, msdu->len,
-				NULL);
-		ath12k_err_dump(ab, NULL, "rx_desc: ", rx_desc, sizeof(*rx_desc),
-				NULL);
+		if (ath12k_rx_nwifi_err_dump) {
+			ath12k_err_dump(ab, msg, "msdu_data: ", msdu->data, msdu->len,
+					NULL);
+			ath12k_err_dump(ab, NULL, "rx_desc: ", rx_desc, sizeof(*rx_desc),
+					NULL);
+		}
 		return true;
 	}
 
@@ -3558,7 +3560,9 @@ static int ath12k_dp_rx_process_msdu(str
 	if (rx_info->decap_type == DP_RX_DECAP_TYPE_NATIVE_WIFI &&
 	    ath12k_dp_rx_check_max_nwifi_hdr_len(ab, rx_desc, msdu,
 						 "Invalid len in Rx\n")) {
-		WARN_ON_ONCE(1);
+		if (ath12k_rx_nwifi_err_dump)
+			WARN_ON_ONCE(1);
+
 		ret = -EINVAL;
 		goto free_out;
 	}
@@ -4006,7 +4010,8 @@ mic_fail:
 	if (rx_info.decap_type == DP_RX_DECAP_TYPE_NATIVE_WIFI &&
 	    ath12k_dp_rx_check_max_nwifi_hdr_len(ab, rx_desc, msdu,
 						 "Invalid len in verify tkip\n")) {
-		WARN_ON_ONCE(1);
+		if (ath12k_rx_nwifi_err_dump)
+			WARN_ON_ONCE(1);
 		return -EINVAL;
 	}
 
@@ -4839,7 +4844,8 @@ static int ath12k_dp_rx_h_null_q_desc(st
 	if (rx_info->decap_type == DP_RX_DECAP_TYPE_NATIVE_WIFI &&
 	    ath12k_dp_rx_check_max_nwifi_hdr_len(ab, desc, msdu,
 						 "Invalid len in Null queue\n")) {
-		WARN_ON_ONCE(1);
+		if (ath12k_rx_nwifi_err_dump)
+			WARN_ON_ONCE(1);
 		ret = -EINVAL;
 		goto exit;
 	}
@@ -4951,7 +4957,8 @@ static bool ath12k_dp_rx_h_tkip_mic_err(
 	if (rx_info->decap_type == DP_RX_DECAP_TYPE_NATIVE_WIFI &&
 	    ath12k_dp_rx_check_max_nwifi_hdr_len(ab, desc, msdu,
 						 "Invalid len in tkip mic err\n")) {
-		WARN_ON_ONCE(1);
+		if (ath12k_rx_nwifi_err_dump)
+			WARN_ON_ONCE(1);
 		drop = true;
 		goto exit;
 	}
@@ -5072,7 +5079,8 @@ static bool ath12k_dp_rx_h_4addr_null_fr
 	if (rx_info->decap_type == DP_RX_DECAP_TYPE_NATIVE_WIFI &&
 	    ath12k_dp_rx_check_max_nwifi_hdr_len(ab, rx_desc, msdu,
 						 "Invalid len in 4addr Null frame\n")) {
-		WARN_ON_ONCE(1);
+		if (ath12k_rx_nwifi_err_dump)
+			WARN_ON_ONCE(1);
 		drop = true;
 		goto exit;
 	}
