From 221701a10617f2e0195770250d535f1d8a4a3f64 Mon Sep 17 00:00:00 2001
From: Maharaja Kennadyrajan <quic_mkenna@quicinc.com>
Date: Tue, 20 Aug 2024 19:05:44 +0530
Subject: [PATCH] QSDK: wifi: ath12k: Add debugfs to configure scan params

Add debugfs support to configure the scan params
min_rest_time and max_rest_time.

Command to set the test time:
echo <min_rest_time> <max_rest_time> > /sys/kernel/debug/ath12k/qcn9274\
hw2.0_0002:01:00.0/mac0/scan_args_config

Command to get the rest time:
cat /sys/kernel/debug/ath12k/qcn9274\ hw2.0_0002:01:00.0/mac0/scan_args_config

60 400

Patch-dependency: None
Patch-work: None

Signed-off-by: Maharaja Kennadyrajan <quic_mkenna@quicinc.com>
---
 drivers/net/wireless/ath/ath12k/core.h    |  5 ++
 drivers/net/wireless/ath/ath12k/debugfs.c | 62 +++++++++++++++++++++++
 drivers/net/wireless/ath/ath12k/wmi.c     | 32 ++++++++++++
 3 files changed, 99 insertions(+)

--- a/drivers/net/wireless/ath/ath12k/core.h
+++ b/drivers/net/wireless/ath/ath12k/core.h
@@ -1159,6 +1159,8 @@ struct ath12k {
 	u8 dcs_enable_bitmap;
 	struct list_head wlan_intf_list;
 	struct work_struct wlan_intf_work;
+	u32 scan_min_rest_time;
+	u32 scan_max_rest_time;
 };
 
 struct ath12k_6ghz_sp_reg_rule {
--- a/drivers/net/wireless/ath/ath12k/debugfs.c
+++ b/drivers/net/wireless/ath/ath12k/debugfs.c
@@ -5334,6 +5334,67 @@ static const struct file_operations fops
 	.llseek = default_llseek,
 };
 
+static ssize_t ath12k_read_scan_args_config(struct file *file,
+					    char __user *user_buf,
+					    size_t count, loff_t *ppos)
+{
+	struct ath12k *ar = file->private_data;
+	int len = 0;
+	char buf[64] = {0};
+
+	len += scnprintf(buf + len, sizeof(buf) - len, "min_rest_time: %u\n",
+			 ar->scan_min_rest_time);
+	len += scnprintf(buf + len, sizeof(buf) - len, "max_rest_time: %u\n",
+			 ar->scan_max_rest_time);
+
+	return simple_read_from_buffer(user_buf, count, ppos, buf, len);
+}
+
+static ssize_t ath12k_write_scan_args_config(struct file *file,
+					     const char __user *user_buf,
+					     size_t count, loff_t *ppos)
+{
+	struct ath12k *ar = file->private_data;
+	int ret;
+	unsigned int scan_params[2] = {0};
+	u8 buf[64] = {0};
+
+	ret = simple_write_to_buffer(buf, sizeof(buf) - 1, ppos, user_buf, count);
+	if (ret < 0)
+		return ret;
+
+	buf[ret] = '\0';
+
+	ret = sscanf(buf, "%u %u\n", &scan_params[0], &scan_params[1]);
+	if (ret != 2)
+		return -EINVAL;
+
+	if (scan_params[0] < 50 || scan_params[0] > 500) {
+		ath12k_err(ar->ab, "min rest time between 50 to 500\n");
+		return -EINVAL;
+	}
+
+	if (scan_params[1] < scan_params[0] || scan_params[1] > 500) {
+		ath12k_err(ar->ab, "max rest time between min rest time to 500\n");
+		return -EINVAL;
+	}
+
+	mutex_lock(&ar->conf_mutex);
+	ar->scan_min_rest_time = scan_params[0];
+	ar->scan_max_rest_time = scan_params[1];
+	mutex_unlock(&ar->conf_mutex);
+
+	return count;
+}
+
+static const struct file_operations fops_scan_args_config = {
+	.read = ath12k_read_scan_args_config,
+	.write = ath12k_write_scan_args_config,
+	.open = simple_open,
+	.owner = THIS_MODULE,
+	.llseek = default_llseek,
+};
+
 static ssize_t ath12k_read_sensitivity_level(struct file *file,
 					     char __user *user_buf,
 					     size_t count, loff_t *ppos)
@@ -5752,6 +5813,8 @@ int ath12k_debugfs_register(struct ath12
 			    &fops_ani_listen_period);
 	debugfs_create_file("sensitivity_level", 0600, ar->debug.debugfs_pdev, ar,
 			    &fops_sensitivity_level);
+	debugfs_create_file("scan_args_config", 0600, ar->debug.debugfs_pdev, ar,
+			    &fops_scan_args_config);
 	return 0;
 }
 
--- a/drivers/net/wireless/ath/ath12k/wmi.c
+++ b/drivers/net/wireless/ath/ath12k/wmi.c
@@ -3664,6 +3664,12 @@ void ath12k_wmi_start_scan_init(struct a
 	arg->dwell_time_passive_6g = 70;
 	arg->min_rest_time = 50;
 	arg->max_rest_time = 500;
+
+	if (ar->scan_min_rest_time)
+		arg->min_rest_time = ar->scan_min_rest_time;
+	if (ar->scan_max_rest_time)
+		arg->max_rest_time = ar->scan_max_rest_time;
+
 	arg->repeat_probe_time = 0;
 	arg->probe_spacing_time = 0;
 	arg->idle_time = 0;
