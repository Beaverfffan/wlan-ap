From 98577ff3a6ce64df340e7cb29955f99ff30284ac Mon Sep 17 00:00:00 2001
From: Mahendran P <quic_mahep@quicinc.com>
Date: Tue, 27 Aug 2024 17:39:08 +0530
Subject: [PATCH 1/2] QSDK: wifi: ath12k: Add WMI support to notify WSI stats

Add WMI support to notify firmware on the WSI load stats information which
includes ingress traffic count and egress traffic count per pdev basis.

Patch-dependency:
	955-wifi-ath12k-Add-support-for-four-link-MLO-in-AP-MLD.patch
Patch-work: None

Signed-off-by: Mahendran P <quic_mahep@quicinc.com>
---
 drivers/net/wireless/ath/ath12k/wmi.c | 36 +++++++++++++++++++++++++++
 drivers/net/wireless/ath/ath12k/wmi.h | 24 ++++++++++++++++++
 2 files changed, 60 insertions(+)

--- a/drivers/net/wireless/ath/ath12k/wmi.c
+++ b/drivers/net/wireless/ath/ath12k/wmi.c
@@ -16828,3 +16828,36 @@ int ath12k_wmi_set_latency(struct ath12k
 	}
 	return ret;
 }
+
+int ath12k_wmi_send_wsi_stats_info(struct ath12k *ar,
+				   struct ath12k_wmi_wsi_stats_info_param *param)
+{
+	struct ath12k_wmi_pdev *wmi = ar->wmi;
+	struct wmi_pdev_wsi_stats_info_cmd *cmd;
+	struct sk_buff *skb;
+	int ret;
+
+	skb = ath12k_wmi_alloc_skb(wmi->wmi_ab, sizeof(*cmd));
+	if (!skb)
+		return -ENOMEM;
+
+	cmd = (struct wmi_pdev_wsi_stats_info_cmd *)skb->data;
+	cmd->tlv_header = ath12k_wmi_tlv_cmd_hdr(WMI_TAG_PDEV_WSI_STATS_INFO_CMD,
+						 (sizeof(*cmd)));
+	cmd->pdev_id = cpu_to_le32(ar->pdev->pdev_id);
+	cmd->wsi_ingress_load_info = cpu_to_le32(param->wsi_ingress_load_info);
+	cmd->wsi_egress_load_info = cpu_to_le32(param->wsi_egress_load_info);
+
+	ath12k_dbg(ar->ab, ATH12K_DBG_WMI,
+		   "WMI pdev wsi stats info pdev_id %d ingress_load_info %d egress_load_info %d\n",
+		   cmd->pdev_id, cmd->wsi_ingress_load_info, cmd->wsi_egress_load_info);
+
+	ret = ath12k_wmi_cmd_send(wmi, skb, WMI_PDEV_WSI_STATS_INFO_CMDID);
+	if (ret) {
+		ath12k_warn(ar->ab,
+			    "failed to send WMI_PDEV_WSI_STATS_INFO_CMDID cmd\n");
+		dev_kfree_skb(skb);
+	}
+
+	return ret;
+}
--- a/drivers/net/wireless/ath/ath12k/wmi.h
+++ b/drivers/net/wireless/ath/ath12k/wmi.h
@@ -484,6 +484,14 @@ enum wmi_tlv_cmd_id {
 	WMI_PDEV_SET_HALPHY_CAL_BMAP_CMDID,
 	WMI_PDEV_MULTIPLE_VDEV_SET_PARAM_CMDID,
 	WMI_PDEV_MEC_AGING_TIMER_CONFIG_CMDID,
+	WMI_PDEV_SET_BIOS_INTERFACE_CMDID,
+	WMI_PDEV_FIPS_EXTEND_CMDID,
+	WMI_PDEV_FIPS_MODE_SET_CMDID,
+	WMI_PDEV_FEATURESET_CMDID,
+	WMI_PDEV_MESH_RX_FILTER_ENABLE_CMDID,
+	WMI_PDEV_SET_TGTR2P_TABLE_CMDID,
+	WMI_PDEV_SET_RF_PATH_CMDID,
+	WMI_PDEV_WSI_STATS_INFO_CMDID,
 	WMI_VDEV_CREATE_CMDID = WMI_TLV_CMD(WMI_GRP_VDEV),
 	WMI_VDEV_DELETE_CMDID,
 	WMI_VDEV_START_REQUEST_CMDID,
@@ -2238,6 +2246,7 @@ enum wmi_tlv_tag {
 	WMI_TAG_CTRL_PATH_CMD_FIXED_PARAM = 0x442,
 	WMI_TAG_CTRL_PATH_EVENT_FIXED_PARAM,
 	WMI_TAG_PRB_RESP_TMPL_ML_INFO_CMD = 0x460,
+	WMI_TAG_PDEV_WSI_STATS_INFO_CMD = 0x4b1,
 	WMI_TAG_PDEV_DFS_RADAR_FLAGS = 0x4b4,
 	WMI_TAG_MAX
 };
@@ -2479,6 +2488,7 @@ enum wmi_tlv_service {
 	WMI_TLV_SERVICE_PEER_METADATA_V1A_V1B_SUPPORT = 365,
 	WMI_TLV_SERVICE_N_LINK_MLO_SUPPORT = 381,
 	WMI_TLV_SERVICE_BRIDGE_VDEV_SUPPORT = 384,
+	WMI_TLV_SERVICE_PDEV_WSI_STATS_INFO_SUPPORT = 388,
 	WMI_TLV_SERVICE_RADAR_FLAGS_SUPPORT = 390,
 	WMI_TLV_SERVICE_SW_PROG_DFS_SUPPORT = 395,
 	WMI_TLV_SERVICE_THERM_THROT_POUT_REDUCTION = 410,
@@ -8809,6 +8819,18 @@ struct wmi_afc_cmd_fixed_param {
 } __packed;
 #define ATH12K_FW_STATS_BUF_SIZE (1024 * 1024)
 
+struct wmi_pdev_wsi_stats_info_cmd {
+	__le32 tlv_header;
+	__le32 pdev_id;
+	__le32 wsi_ingress_load_info;
+	__le32 wsi_egress_load_info;
+} __packed;
+
+struct ath12k_wmi_wsi_stats_info_param {
+	u32 wsi_ingress_load_info;
+	u32 wsi_egress_load_info;
+};
+
 void ath12k_wmi_init_qcn9274(struct ath12k_base *ab,
 			     struct ath12k_wmi_resource_config_arg *config);
 void ath12k_wmi_init_wcn7850(struct ath12k_base *ab,
@@ -9025,4 +9047,6 @@ int ath12k_wmi_config_peer_ppeds_routing
 void ath12k_wmi_peer_chan_width_switch_work(struct work_struct *work);
 int ath12k_wmi_set_latency(struct ath12k *ar, struct ath12k_latency_params *params);
 int ath12k_wmi_pdev_get_ani_level(struct ath12k *ar, u32 param_id, u8 pdev_id);
+int ath12k_wmi_send_wsi_stats_info(struct ath12k *ar,
+				   struct ath12k_wmi_wsi_stats_info_param *param);
 #endif
