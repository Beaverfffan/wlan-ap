From faabc62bf613948e84997c07b54f7cae2482a394 Mon Sep 17 00:00:00 2001
From: Sarika Sharma <quic_sarishar@quicinc.com>
Date: Wed, 23 Oct 2024 15:53:56 +0530
Subject: [PATCH] wifi: ath12k: drop corrupted packets for invalid band from
 WBM error ring

Currently, warn_on is getting trigger due to the presence of
corrupted packets associated with an invalid band from the
WBM error ring.
This issue can lead to unnecessary warnings and potential disruptions.

Hence, add a check to drop the packets if it has invalid band and
originating from the WBM error path.
This will ensure corrupted packets are dropped and prevent the warn_on
trigger.

patch-dependency: none

Signed-off-by: Sarika Sharma <quic_sarishar@quicinc.com>
---
 drivers/net/wireless/ath/ath12k/dp_mon.c |  1 +
 drivers/net/wireless/ath/ath12k/dp_rx.c  | 42 +++++++++++++++++++-----
 drivers/net/wireless/ath/ath12k/dp_rx.h  |  4 ++-
 3 files changed, 38 insertions(+), 9 deletions(-)

--- a/drivers/net/wireless/ath/ath12k/dp_mon.c
+++ b/drivers/net/wireless/ath/ath12k/dp_mon.c
@@ -2279,6 +2279,7 @@ static int ath12k_dp_mon_rx_deliver(stru
 	bool fcs_err = false;
 
 	rx_info.filled = 0;
+	rx_info.is_invalid_band_drop = 0;
 	rx_info.rx_status = rxs;
 
 	mon_skb = ath12k_dp_mon_rx_merg_msdus(ar, mpdu_idx, head_msdu,
--- a/drivers/net/wireless/ath/ath12k/dp_rx.c
+++ b/drivers/net/wireless/ath/ath12k/dp_rx.c
@@ -3329,9 +3329,11 @@ static void ath12k_dp_rx_h_fetch_info(st
 	}
 }
 
-void ath12k_dp_rx_h_ppdu(struct ath12k *ar, struct ath12k_dp_rx_info *rx_info)
+void ath12k_dp_rx_h_ppdu(struct ath12k *ar, struct ath12k_dp_rx_info *rx_info,
+			 struct sk_buff *msdu)
 {
 	struct ieee80211_rx_status *rx_status = rx_info->rx_status;
+	struct ath12k_skb_rxcb *rxcb = ATH12K_SKB_RXCB(msdu);
 	u8 channel_num;
 	u32 center_freq, meta_data = 0;
 	struct ieee80211_channel *channel;
@@ -3366,9 +3368,16 @@ void ath12k_dp_rx_h_ppdu(struct ath12k *
 	}
 
 	if (unlikely(rx_status->band == NUM_NL80211_BANDS || !ar->ah->hw->wiphy->bands[rx_status->band])) {
-        ath12k_err(ar->ab, "sband is NULL for status band %d channel_num %d center_freq %d pdev_id %d\n",
-                    rx_status->band, channel_num, center_freq, ar->pdev_idx);
 
+		if (rxcb->err_rel_src == HAL_WBM_REL_SRC_MODULE_REO ||
+		    rxcb->err_rel_src == HAL_WBM_REL_SRC_MODULE_RXDMA) {
+			WARN_ON_ONCE(1);
+			rx_info->is_invalid_band_drop = true;
+			return;
+		} else {
+			ath12k_err(ar->ab, "sband is NULL for status band %d channel_num %d center_freq %d pdev_id %d\n",
+				   rx_status->band, channel_num, center_freq, ar->pdev_idx);
+		}
 		spin_lock_bh(&ar->data_lock);
 		channel = ar->rx_channel;
 		if (channel) {
@@ -3605,7 +3614,7 @@ static int ath12k_dp_rx_process_msdu(str
 	if (*fast_rx)
 		return 0;
 
-	ath12k_dp_rx_h_ppdu(ar, rx_info);
+	ath12k_dp_rx_h_ppdu(ar, rx_info, msdu);
 
 	rx_info->rx_status->flag |= RX_FLAG_SKIP_MONITOR | RX_FLAG_DUP_VALIDATED;
 
@@ -3956,6 +3965,7 @@ try_again:
 		}
 
 		rx_info.filled = 0;
+		rx_info.is_invalid_band_drop = 0;
 		rx_info.rx_status = &rx_status;
 		ret = ath12k_dp_rx_process_msdu(ar, msdu, &msdu_list, &rx_info,
 						&fast_rx);
@@ -4075,6 +4085,7 @@ static int ath12k_dp_rx_h_verify_tkip_mi
 		return 0;
 
 	rx_info.filled = 0;
+	rx_info.is_invalid_band_drop = 0;
 	rx_info.rx_status = rxs;
 
 	hdr = (struct ieee80211_hdr *)(msdu->data + hal_rx_desc_sz);
@@ -4117,7 +4128,7 @@ mic_fail:
 		return -EINVAL;
 	}
 
-	ath12k_dp_rx_h_ppdu(ar, &rx_info);
+	ath12k_dp_rx_h_ppdu(ar, &rx_info, msdu);
 	ath12k_dp_rx_h_undecap(ar, msdu, rx_desc,
 			       HAL_ENCRYPT_TYPE_TKIP_MIC, &rx_info, true);
 	ieee80211_rx(ar->ah->hw, msdu);
@@ -4952,7 +4963,12 @@ static int ath12k_dp_rx_h_null_q_desc(st
 		goto exit;
 	}
 
-	ath12k_dp_rx_h_ppdu(ar, rx_info);
+	ath12k_dp_rx_h_ppdu(ar, rx_info, msdu);
+	if (rx_info->is_invalid_band_drop) {
+		ret = -EINVAL;
+		goto exit;
+	}
+
 	fast_rx = false;
 	ath12k_dp_rx_h_mpdu(ar, msdu, desc, rx_info, &fast_rx);
 
@@ -5065,7 +5081,12 @@ static bool ath12k_dp_rx_h_tkip_mic_err(
 		goto exit;
 	}
 
-	ath12k_dp_rx_h_ppdu(ar, rx_info);
+	ath12k_dp_rx_h_ppdu(ar, rx_info, msdu);
+
+	if (rx_info->is_invalid_band_drop) {
+		drop = true;
+		goto exit;
+	}
 
 	rx_info->rx_status->flag |= (RX_FLAG_MMIC_STRIPPED | RX_FLAG_MMIC_ERROR |
 				     RX_FLAG_DECRYPTED);
@@ -5187,7 +5208,12 @@ static bool ath12k_dp_rx_h_4addr_null_fr
 		goto exit;
 	}
 
-	ath12k_dp_rx_h_ppdu(ar, rx_info);
+	ath12k_dp_rx_h_ppdu(ar, rx_info, msdu);
+
+	if (rx_info->is_invalid_band_drop) {
+		drop = true;
+		goto exit;
+	}
 
 	ath12k_dp_rx_h_mpdu(ar, msdu, rx_desc, rx_info, &fast_rx);
 
@@ -5272,6 +5298,7 @@ static void ath12k_dp_rx_wbm_err(struct
 	bool drop = true;
 
 	rx_info.filled = 0;
+	rx_info.is_invalid_band_drop = 0;
 	rx_info.rx_status = &rxs;
 
 	switch (rxcb->err_rel_src) {
@@ -5310,6 +5337,7 @@ int ath12k_dp_rx_process_wbm_err(struct
 	int i, num_buffs_reaped[ATH12K_MAX_SOCS] = { 0 };
 	struct ath12k_rx_desc_info *desc_info;
 	struct ath12k_soc_dp_stats *soc_stats = &ab->soc_stats;
+	bool scatter_list_valid = false;
 	int total_num_buffs_reaped = 0;
 	int ret;
 	u8 hw_link_id, chip_id;
@@ -5407,6 +5435,8 @@ int ath12k_dp_rx_process_wbm_err(struct
 					rxcb = ATH12K_SKB_RXCB(msdu);
 					rxcb->hw_link_id = hw_link_id;
 				}
+
+				scatter_list_valid = false;
 
 				skb_queue_splice_tail_init(&scatter_msdu_list, &msdu_list);
 			} else {
@@ -5414,6 +5444,7 @@ int ath12k_dp_rx_process_wbm_err(struct
 				__skb_queue_tail(&msdu_list, msdu);
 			}
 		} else {
+			scatter_list_valid = true;
 			__skb_queue_tail(&scatter_msdu_list, msdu);
 		}
 	}
@@ -5425,6 +5456,9 @@ int ath12k_dp_rx_process_wbm_err(struct
 	if (!total_num_buffs_reaped)
 		goto done;
 
+	if (scatter_list_valid)
+		__skb_queue_purge(&scatter_msdu_list);
+
 	for (i = 0; i < ab->ag->num_chip; i++) {
 		if (!num_buffs_reaped[i])
 			continue;
--- a/drivers/net/wireless/ath/ath12k/dp_rx.h
+++ b/drivers/net/wireless/ath/ath12k/dp_rx.h
@@ -152,6 +152,7 @@ struct ath12k_dp_rx_info {
 	bool flow_idx_invalid;
 	bool flow_idx_timeout;
 	u16 flow_metadata;
+	bool is_invalid_band_drop;
 };
 
 #define ATH12K_DP_MIN_FST_CORE_MASK 0x1
@@ -277,7 +278,8 @@ u8 ath12k_dp_rx_h_decap_type(struct ath1
 			     struct hal_rx_desc *desc);
 u32 ath12k_dp_rx_h_mpdu_err(struct ath12k_base *ab,
 			    struct hal_rx_desc *desc);
-void ath12k_dp_rx_h_ppdu(struct ath12k *ar, struct ath12k_dp_rx_info *rx_info);
+void ath12k_dp_rx_h_ppdu(struct ath12k *ar, struct ath12k_dp_rx_info *rx_info,
+			 struct sk_buff *msdu);
 
 int ath12k_dp_rxdma_ring_sel_config_qcn9274(struct ath12k_base *ab);
 int ath12k_dp_rxdma_ring_sel_config_wcn7850(struct ath12k_base *ab);
