From d41135819140db5fb1b5e7f2257e0a6413481f01 Mon Sep 17 00:00:00 2001
From: Vignesh C <quic_vignc@quicinc.com>
Date: Wed, 23 Oct 2024 23:43:39 +0530
Subject: [PATCH] QSDK:CP wifi:mac80211: Allow probe responses to random
 macaddr during scan

For split band devices, the ath12k driver splits the scan and runs scan
in parallel. During split scan, driver uses a random MAC address for the
scan vdev. Allow probe responses targeted to the random MAC address when
NL80211_SCAN_FLAG_RANDOM_ADDR is set in hw_scan_req->flags.

Patch-dependency: none
Patch-work: none

Signed-off-by: Vignesh C <quic_vignc@quicinc.com>
---
 net/mac80211/scan.c | 6 ++++++
 1 file changed, 6 insertions(+)

--- a/net/mac80211/scan.c
+++ b/net/mac80211/scan.c
@@ -289,9 +289,11 @@ void ieee80211_scan_rx(struct ieee80211_
 		struct cfg80211_scan_request *scan_req;
 		struct cfg80211_sched_scan_request *sched_scan_req;
 		u32 scan_req_flags = 0, sched_scan_req_flags = 0;
+		u32 hw_scan_req_flags = 0;
 
 		scan_req = rcu_dereference(local->scan_req);
 		sched_scan_req = rcu_dereference(local->sched_scan_req);
+		hw_scan_req_flags = local->hw_scan_req->req.flags;
 
 		if (scan_req)
 			scan_req_flags = scan_req->flags;
@@ -299,6 +301,9 @@ void ieee80211_scan_rx(struct ieee80211_
 		if (sched_scan_req)
 			sched_scan_req_flags = sched_scan_req->flags;
 
+		if (hw_scan_req_flags & NL80211_SCAN_FLAG_RANDOM_ADDR)
+			scan_req_flags |= NL80211_SCAN_FLAG_RANDOM_ADDR;
+
 		/* ignore ProbeResp to foreign address or non-bcast (OCE)
 		 * unless scanning with randomised address
 		 */
@@ -403,6 +408,7 @@ static bool ieee80211_prep_hw_scan(struc
 	ether_addr_copy(local->hw_scan_req->req.mac_addr_mask,
 			req->mac_addr_mask);
 	ether_addr_copy(local->hw_scan_req->req.bssid, req->bssid);
+	local->hw_scan_req->req.flags = req->flags;
 
 	return true;
 }
