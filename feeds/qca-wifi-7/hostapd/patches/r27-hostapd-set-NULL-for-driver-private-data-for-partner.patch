From 9c3520e6d5fcde225d55dc6a593d3c421954ccdb Mon Sep 17 00:00:00 2001
From: Ganesh Kariganuru Mahabalesh <quic_gkarigan@quicinc.com>
Date: Wed, 10 Apr 2024 00:31:36 -0700
Subject: [PATCH] hostapd: set NULL for driver private data for partner links 
 after deinitializing driver interface

In wifi down scenario, we are honoring NL80211_CMD_STOP_AP from
kernel which frees up links(decrements n_links value) using
nl80211_remove_link() and during the normal deinit path, we will check
n_links value to deinit nl80211 driver interface. Since we are cleaning up
links in multiple paths, while deinitializing the driver interface we will
encounter a double free scenario.

Hence, set NULL for driver private data for all the partner links after
deinit of the driver interface and refactor wpa_driver_get_shared_status
function.

Signed-off-by: Ganesh Kariganuru Mahabalesh <quic_gkarigan@quicinc.com>

Index: hostapd-2023-06-22-599d00be/src/ap/hostapd.c
===================================================================
--- hostapd-2023-06-22-599d00be.orig/src/ap/hostapd.c
+++ hostapd-2023-06-22-599d00be/src/ap/hostapd.c
@@ -3449,8 +3449,9 @@ static void hostapd_cleanup_driver(const
 #endif /* CONFIG_IEEE80211BE */
 
 	if (driver->get_drv_shared_status &&
-	    !driver->get_drv_shared_status(drv_priv, iface->bss[0])) {
+	    !driver->get_drv_shared_status(drv_priv, iface->bss[0]->mld_link_id)) {
 		driver->hapd_deinit(drv_priv);
+		hostapd_bss_free(iface->bss[0]);
 		goto exit;
 	}
 
@@ -5305,7 +5306,7 @@ void hostapd_bss_free(struct hostapd_dat
 {
 	struct hostapd_data *link_bss = NULL;
 
-	if (!hapd)
+	if (!hapd || !hapd->conf->mld_ap)
 		return;
 
 	hapd->drv_priv = NULL;
Index: hostapd-2023-06-22-599d00be/src/drivers/driver_nl80211.c
===================================================================
--- hostapd-2023-06-22-599d00be.orig/src/drivers/driver_nl80211.c
+++ hostapd-2023-06-22-599d00be/src/drivers/driver_nl80211.c
@@ -14196,26 +14196,36 @@ fail:
 	return ret;
 }
 
-static bool wpa_driver_get_shared_status(void *priv, void *bss_ctx)
+static bool wpa_driver_get_shared_status(void *priv, int link_id)
 {
 	struct i802_bss *bss = priv;
 	struct wpa_driver_nl80211_data *drv = bss->drv;
 	int num_bss = 0;
-
-	/* more than one links means some one is still using */
-	if (bss->n_links > 1)
-		return true;
+	int i;
 
 	/* If any other bss exist, means someone else is using since at this
 	 * time, we would have removed all bss created by this driver and only
 	 * this bss should be remaining if driver is not shared by anyone
 	 */
-	for (bss = drv->first_bss; bss; bss = bss->next)
+	for (bss = drv->first_bss; bss; bss = bss->next) {
 		num_bss++;
+		if (num_bss > 1)
+			return true;
+	}
 
-	if (num_bss > 1)
+	bss = priv;
+	/* more than one links means some one is still using */
+	if (bss->n_links > 1)
 		return true;
 
+	/* In some scenarios, NL80211_CMD_STOP_AP from kernel can remove link
+	 * from the bss which would decrement n_links.
+	 */
+	for (i = 0; i < MAX_NUM_MLD_LINKS; i++) {
+		if (bss->links[i].link_id != link_id &&
+		    bss->links[i].link_id != NL80211_DRV_LINK_ID_NA)
+			return true;
+	}
 	return false;
 }
 
