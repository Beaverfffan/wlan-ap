From f6e03126514c7ec574f7ed16b4f50b26396d21bb Mon Sep 17 00:00:00 2001
From: Jouni Malinen <j@w1.fi>
Date: Wed, 18 Sep 2024 11:05:17 +0530
Subject: [PATCH] UPSTREAM: hostapd: Check for invalid Rejected Groups element
 length explicitly on STA Instead of practically ignoring an odd octet at the
 end of the element, check for such invalid case explicitly. This is needed to
 avoid a potential group downgrade attack.

Tag: SAE
Patch-work: None
Patch-dependency: None

Signed-off-by: Jouni Malinen <j@w1.fi>
Signed-off-by: Arunpandi Kannan <quic_arunpand@quicinc.com>
---
 wpa_supplicant/sme.c | 11 +++++++++--
 1 file changed, 9 insertions(+), 2 deletions(-)

diff --git a/wpa_supplicant/sme.c b/wpa_supplicant/sme.c
index c479745..5dede2e 100644
--- a/wpa_supplicant/sme.c
+++ b/wpa_supplicant/sme.c
@@ -1680,14 +1680,21 @@ static int sme_sae_is_group_enabled(struct wpa_supplicant *wpa_s, int group)
 static int sme_check_sae_rejected_groups(struct wpa_supplicant *wpa_s,
 					 const struct wpabuf *groups)
 {
-	size_t i, count;
+	size_t i, count, len;
 	const u8 *pos;
 
 	if (!groups)
 		return 0;
 
 	pos = wpabuf_head(groups);
-	count = wpabuf_len(groups) / 2;
+	len = wpabuf_len(groups);
+	if (len & 1) {
+		wpa_printf(MSG_DEBUG,
+			   "SAE: Invalid length of the Rejected Groups element payload: %zu",
+			   len);
+		return 1;
+	}
+	count = len / 2;
 	for (i = 0; i < count; i++) {
 		int enabled;
 		u16 group;
-- 
2.34.1

