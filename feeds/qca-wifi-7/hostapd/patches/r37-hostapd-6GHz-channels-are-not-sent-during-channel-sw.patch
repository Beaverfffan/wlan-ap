From 770d2a1c8c5735e6944ab2efeff4390ce166ff9f Mon Sep 17 00:00:00 2001
From: Maharaja Kennadyrajan <quic_mkenna@quicinc.com>
Date: Mon, 12 Aug 2024 13:04:16 +0530
Subject: [PATCH] hostapd: 6GHz channels are not sent during channel switch

When channel switch command is given with 6GHz channel in
the single wiphy scenario, hostapd sends the 5GHz channel
because of incorrect mode selected during the hostapd reload
config.

Hence, while selecting the HW mode, add the operating class
and frequency along with the mode check.

Patch-dependency: 340-reload_freq_change.patch
Patch-work: None
Fixes: c21b308cfe35c (Revert "hostapd: backport from master, including ucode based reload support")

Signed-off-by: Maharaja Kennadyrajan <quic_mkenna@quicinc.com>
---
 src/ap/hostapd.c     | 3 ++-
 src/ap/hw_features.c | 4 ++--
 src/ap/hw_features.h | 7 +++++++
 3 files changed, 11 insertions(+), 3 deletions(-)

diff --git a/src/ap/hostapd.c b/src/ap/hostapd.c
index 3ba6834..80112d6 100644
--- a/src/ap/hostapd.c
+++ b/src/ap/hostapd.c
@@ -389,8 +389,9 @@ int hostapd_reload_config(struct hostapd_iface *iface, int reconf)
 	for (i = 0; i < iface->num_hw_features; i++) {
 		struct hostapd_hw_modes *mode = &iface->hw_features[i];
 		if (mode->mode == iface->conf->hw_mode) {
+			if (skip_mode(iface, mode))
+				continue;
 			iface->current_mode = mode;
-			break;
 		}
 	}
 
diff --git a/src/ap/hw_features.c b/src/ap/hw_features.c
index c82324b..d82e9b3 100644
--- a/src/ap/hw_features.c
+++ b/src/ap/hw_features.c
@@ -1170,8 +1170,8 @@ static int hostapd_is_usable_chans(struct hostapd_iface *iface)
 }
 
 
-static bool skip_mode(struct hostapd_iface *iface,
-		      struct hostapd_hw_modes *mode)
+bool skip_mode(struct hostapd_iface *iface,
+	       struct hostapd_hw_modes *mode)
 {
 	int chan;
 
diff --git a/src/ap/hw_features.h b/src/ap/hw_features.h
index c7d39d9..a926f52 100644
--- a/src/ap/hw_features.h
+++ b/src/ap/hw_features.h
@@ -32,6 +32,7 @@ void hostapd_determine_mode(struct hostapd_iface *iface);
 void hostapd_free_multi_hw_info(struct hostapd_multi_hw_info *multi_macs,
 				size_t num_multi_hws);
 int hostapd_set_current_hw_info(struct hostapd_iface *iface, u32 oper_freq);
+bool skip_mode(struct hostapd_iface *iface, struct hostapd_hw_modes *mode);
 #else /* NEED_AP_MLME */
 static inline void
 hostapd_free_hw_features(struct hostapd_hw_modes *hw_features,
@@ -110,6 +111,12 @@ static inline int hostapd_set_current_hw_info(struct hostapd_iface *iface,
 {
 	return 0;
 }
+
+static inline bool skip_mode(struct hostapd_iface *iface,
+			     struct hostapd_hw_modes *mode)
+{
+	return false;
+}
 #endif /* NEED_AP_MLME */
 
 #endif /* HW_FEATURES_H */
-- 
2.34.1

