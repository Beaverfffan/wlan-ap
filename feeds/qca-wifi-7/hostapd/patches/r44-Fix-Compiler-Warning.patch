From fd10a18dc5d4b8150912fa491294b4f017466ac4 Mon Sep 17 00:00:00 2001
From: Hari Naraayana Desikan Kannan <quic_hnaraaya@quicinc.com>
Date: Wed, 16 Oct 2024 22:18:29 +0530
Subject: [PATCH] Fix Compiler Warning

Fix unused variable, int-conversion and unused function
Compiler Warnings.

Signed-off-by: Hari Naraayana Desikan Kannan <quic_hnaraaya@quicinc.com>
---
 src/ap/wpa_auth_glue.c | 4 ++--
 1 file changed, 2 insertions(+), 2 deletions(-)

--- a/src/ap/drv_callbacks.c
+++ b/src/ap/drv_callbacks.c
@@ -1749,24 +1749,6 @@ static int hostapd_event_new_sta(struct
 }
 
 
-static struct hostapd_data * hostapd_find_sta(struct hostapd_iface *iface, const u8 *src, struct sta_info **sta_ret)
-{
-	int j;
-	struct hostapd_data *hapd;
-	struct sta_info *sta;
-
-	for (j = 0; j < iface->num_bss; j++) {
-		hapd = iface->bss[j];
-		sta = ap_get_sta(hapd, src);
-		if (sta && sta->flags & WLAN_STA_ASSOC && sta->wpa_sm) {
-			if (sta_ret)
-				*sta_ret = sta;
-			return hapd;
-		}
-	}
-	return NULL;
-}
-
 static void hostapd_event_eapol_rx(struct hostapd_data *hapd, const u8 *src,
 				   const u8 *data, size_t data_len,
 				   enum frame_encryption encrypted,
--- a/src/ap/sta_info.c
+++ b/src/ap/sta_info.c
@@ -523,7 +523,6 @@ void ap_free_sta(struct hostapd_data *ha
 		vlan_remove_dynamic(vlan_bss, sta->vlan_id_bound);
 	}
 #endif /* CONFIG_NO_VLAN */
-free:
 	os_free(sta->challenge);
 
 	os_free(sta->sa_query_trans_id);
@@ -1576,16 +1575,6 @@ void ap_sta_set_authorized(struct hostap
 		return;
 
 	if (authorized) {
-		int mld_assoc_link_id = -1;
-
-#ifdef CONFIG_IEEE80211BE
-		if (hapd->conf->mld_ap && sta->mld_info.mld_sta) {
-			if (sta->mld_assoc_link_id == hapd->mld_link_id)
-				mld_assoc_link_id = sta->mld_assoc_link_id;
-			else
-				mld_assoc_link_id = -2;
-		}
-#endif /* CONFIG_IEEE80211BE */
 		sta->flags |= WLAN_STA_AUTHORIZED;
 	} else {
 		sta->flags &= ~WLAN_STA_AUTHORIZED;
--- a/src/ap/ieee802_11.h
+++ b/src/ap/ieee802_11.h
@@ -9,6 +9,8 @@
 #ifndef IEEE802_11_H
 #define IEEE802_11_H
 
+#include "hostapd.h"
+
 #define MIN(x, y) ((x) < (y)?(x):(y))
 
 struct hostapd_iface;
@@ -23,6 +25,7 @@ enum ieee80211_op_mode;
 struct mac_acl_entry;
 enum oper_chan_width;
 struct ieee802_11_elems;
+struct mld_link_info;
 
 enum colocation_mode {
         NO_COLOCATED_6GHZ,
--- a/src/ap/wpa_auth.c
+++ b/src/ap/wpa_auth.c
@@ -3937,16 +3937,6 @@ void wpa_auth_ml_get_rsn_info(struct wpa
 }
 
 
-static void wpa_auth_get_ml_rsn_info(struct wpa_authenticator *wpa_auth,
-				     struct wpa_auth_ml_rsn_info *info)
-{
-	if (!wpa_auth->cb->get_ml_rsn_info)
-		return;
-
-	wpa_auth->cb->get_ml_rsn_info(wpa_auth->cb_ctx, info);
-}
-
-
 void wpa_auth_ml_get_key_info(struct wpa_authenticator *a,
 			      struct wpa_auth_ml_link_key_info *info,
 			      bool mgmt_frame_prot, bool beacon_prot)
--- a/src/drivers/driver.h
+++ b/src/drivers/driver.h
@@ -5348,7 +5348,7 @@ struct wpa_driver_ops {
 	/**
 	 * get_drv_shared_status - Get shared status of driver interface
 	 * @priv: private driver interface data from init()
-	 * @bss_ctx: BSS context for %WPA_IF_AP_BSS interfaces
+	 * @link_id: Valid link ID
 	 *
 	 * Checks whether driver interface is being used by other partner BSS(s)
 	 * or not. This is used to decide whether driver interface needs to be
@@ -5356,7 +5356,7 @@ struct wpa_driver_ops {
 	 *
 	 * Returns: True if it is being used or else False.
 	 */
-	bool (*get_drv_shared_status)(void *priv, void *bss_ctx);
+	bool (*get_drv_shared_status)(void *priv, int link_id);
 
 	/**
 	 * can_share_drv - Check if already a drv exist in the same global driver
--- a/src/ap/ieee802_11_eht.c
+++ b/src/ap/ieee802_11_eht.c
@@ -1152,7 +1152,7 @@ const u8 * hostapd_process_ml_auth(struc
 static int hostapd_mld_validate_assoc_info(struct hostapd_data *hapd,
 					   struct mld_info *info)
 {
-	u8 i, link_id;
+	u8 link_id;
 
 	if (!info->mld_sta) {
 		wpa_printf(MSG_DEBUG, "MLD: Not a non-AP MLD");
--- a/src/drivers/driver_nl80211_event.c
+++ b/src/drivers/driver_nl80211_event.c
@@ -188,6 +188,7 @@ static const char * nl80211_command_to_s
 	C2S(NL80211_CMD_SET_HW_TIMESTAMP)
 	C2S(NL80211_CMD_AWGN_DETECT)
 	C2S(__NL80211_CMD_AFTER_LAST)
+	default: return "Unknown command";
 	}
 #undef C2S
 
@@ -3802,7 +3803,9 @@ qca_nl80211_afc_power_update_completed(s
 static void nl80211_vendor_event_qca(struct i802_bss *bss,
 				     u32 subcmd, u8 *data, size_t len)
 {
+#ifdef CONFIG_DRIVER_NL80211_QCA
 	struct wpa_driver_nl80211_data *drv = bss->drv;
+#endif
 
 	switch (subcmd) {
 	case QCA_NL80211_VENDOR_SUBCMD_TEST:
--- a/wpa_supplicant/events.c
+++ b/wpa_supplicant/events.c
@@ -5475,6 +5475,9 @@ supplicant_ch_switch_started(struct wpa_
 	case CHAN_WIDTH_80P80:
 		width = 160;
 		break;
+	default:
+		wpa_printf(MSG_ERROR, "\nInvalid Channel Width");
+		return;
 	}
 
 	ret = asprintf(&cmd, "CHAN_SWITCH %d %d sec_channel_offset=%d center_freq1=%d center_freq2=%d, bandwidth=%d auto-ht\n",
--- a/src/drivers/driver_common.c
+++ b/src/drivers/driver_common.c
@@ -104,6 +104,7 @@ const char * event_to_string(enum wpa_ev
 	E2S(LINK_RECONFIG);
 	E2S(RX_CRITICAL_UPDATE);
 	E2S(6GHZ_POWER_MODE_NOTIFY);
+	default: return "Unknown command";
 	}
 
 	return "UNKNOWN";
--- a/src/rsn_supp/wpa.c
+++ b/src/rsn_supp/wpa.c
@@ -687,7 +687,7 @@ static int wpa_handle_ext_key_id(struct
 
 		if (!kde->key_id) {
 			wpa_msg(sm->ctx->msg_ctx,
-				sm->use_ext_key_id ? MSG_INFO : MSG_DEBUG,
+				MSG_DEBUG,
 				"RSN: No Key ID in Extended Key ID handshake");
 			sm->keyidx_active = 0;
 			return sm->use_ext_key_id ? -1 : 0;
--- a/hostapd/ctrl_iface.c
+++ b/hostapd/ctrl_iface.c
@@ -5131,7 +5131,7 @@ static void hostapd_ctrl_iface_receive(i
 
 	if (os_strcmp(pos, "PING") == 0)
 		level = MSG_EXCESSIVE;
-	wpa_hexdump_ascii(level, "RX ctrl_iface", pos, res);
+	wpa_hexdump_ascii(level, "RX ctrl_iface", (const u8 *)pos, res);
 
 	reply_len = hostapd_ctrl_iface_receive_process(hapd, pos,
 						       reply, reply_size,
