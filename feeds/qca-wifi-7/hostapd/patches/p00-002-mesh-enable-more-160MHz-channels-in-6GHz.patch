From d6e52c4ef2bb8e915cae088564c412583f1794c9 Mon Sep 17 00:00:00 2001
From: P Praneesh <quic_ppranees@quicinc.com>
Date: Fri, 21 Jan 2022 09:44:15 +0530
Subject: [PATCH] mesh: enable more 160MHz channels in 6GHz

Current 160MHz implementation supports mesh bringup in limited channels.
Allow all the 6GHz 80MHz channels to support 160MHz if the secondary 80MHz
is available.

Ex: User can bringup 160MHz in 49th channel (primary 80MHz) based on 33rd
channel(secondary 80MHz) availablity.

Signed-off-by: P Praneesh <quic_ppranees@quicinc.com>
---
 wpa_supplicant/wpa_supplicant.c | 21 ++++++++++++++++++---
 1 file changed, 18 insertions(+), 3 deletions(-)

--- a/hostapd/config_file.c
+++ b/hostapd/config_file.c
@@ -4305,6 +4305,8 @@ static int hostapd_config_fill(struct ho
 	} else if (os_strcmp(buf, "wowlan_triggers") == 0) {
 		os_free(bss->wowlan_triggers);
 		bss->wowlan_triggers = os_strdup(pos);
+	} else if (os_strcmp(buf, "enable_160mhz_bw") == 0) {
+		 conf->enable_160mhz_bw = atoi(pos);
 	} else if (os_strcmp(buf, "disable_40mhz_scan") == 0) {
 		 conf->disable_40mhz_scan = atoi(pos);
 #ifdef CONFIG_FST
--- a/src/ap/ap_config.h
+++ b/src/ap/ap_config.h
@@ -1131,6 +1131,7 @@ struct hostapd_config {
 	} *acs_chan_bias;
 	unsigned int num_acs_chan_bias;
 #endif /* CONFIG_ACS */
+	int enable_160mhz_bw;
 	int disable_40mhz_scan;
 
 	struct wpabuf *lci;
--- a/src/drivers/driver.h
+++ b/src/drivers/driver.h
@@ -1347,6 +1347,11 @@ struct wpa_driver_associate_params {
 	int beacon_tx_mode;
 
 	/**
+	 * Enable 160MHz BW - set it 1 to enable mesh 160MHz 6G
+	 */
+	int enable_160mhz_bw;
+
+	/**
 	 * disable_eht - Disable EHT for this connection
 	 */
 	int disable_eht;
--- a/wpa_supplicant/config.c
+++ b/wpa_supplicant/config.c
@@ -2880,6 +2880,7 @@ static const struct parse_data ssid_fiel
 	{ INT_RANGE(sae_pk, 0, 2) },
 	{ INT_RANGE(disable_40mhz_scan, 0, 1)},
 	{ INT_RANGE(beacon_tx_mode, 1, 2)},
+	{ INT_RANGE(enable_160mhz_bw, 0, 1)},
 	{ INT_RANGE(disable_eht, 0, 1)},
 	{ INT_RANGE(enable_4addr_mode, 0, 1)},
 };
--- a/wpa_supplicant/config_file.c
+++ b/wpa_supplicant/config_file.c
@@ -900,6 +900,7 @@ static void wpa_config_write_network(FIL
 	INT(disable_eht);
 	INT(disable_40mhz_scan);
 	INT(beacon_tx_mode);
+	INT(enable_160mhz_bw);
 	INT(enable_4addr_mode);
 
 #undef STR
--- a/wpa_supplicant/config_ssid.h
+++ b/wpa_supplicant/config_ssid.h
@@ -1273,7 +1273,12 @@ struct wpa_ssid {
 	 */
 	int beacon_tx_mode;
 
-	 /**
+	/**
+	 * Enable 160MHz BW - set it 1 to enable mesh 160MHz 6G
+	 */
+	int enable_160mhz_bw;
+
+	/**
 	 * disable_eht - Disable EHT (IEEE 802.11be) for this network
 	 *
 	 * By default, use it if it is available, but this can be configured
--- a/wpa_supplicant/wpa_cli.c
+++ b/wpa_supplicant/wpa_cli.c
@@ -1506,6 +1506,7 @@ static const char *network_fields[] = {
 	"mac_addr", "pbss", "wps_disabled",
 	"disable_40mhz_scan",
 	"beacon_tx_mode",
+	"enable_160mhz_bw",
 };
 
 
--- a/wpa_supplicant/wpa_supplicant.conf
+++ b/wpa_supplicant/wpa_supplicant.conf
@@ -1756,6 +1756,11 @@ fast_reauth=1
 # Enable EDMG capability in STA/AP mode, default value is false
 #enable_edmg=1
 
+#To configure 80MHz and 160MHz in Mesh mode.
+#Set 0 to enable 80MHz in Mesh mode
+#Set 1 to enable 160MHz in Mesh mode
+#enable_160mhz_bw=1
+
 # This value is used to configure the channel bonding feature.
 # Default value is 0.
 # Relevant only if enable_edmg is true
