From b54aabadd87026fa59cbdcd80e1c79f402f6fd75 Mon Sep 17 00:00:00 2001
From: Yuvarani V <quic_yuvarani@quicinc.com>
Date: Mon, 20 Nov 2023 14:47:17 +0530
Subject: [PATCH] hostapd: Add support for IEEE 802.11be D3.0 MBSSID case

Add SSID element in per-STA profile of basic multi-link element where
it contains complete profile and multi-link probe response is
transmitted by transmitted BSSID in response to multi-link probe
request directed to non-transmitted BSSID in the same MBSSID group.
Transmitted and non-transmitted BSSIDs are part of distinct AP MLDs.

Signed-off-by: Yuvarani V <quic_yuvarani@quicinc.com>
---
 src/ap/beacon.c     | 21 ++++++++++++---------
 1 file changed, 12 insertions(+), 9 deletions(-)

--- a/src/ap/beacon.c
+++ b/src/ap/beacon.c
@@ -599,10 +599,9 @@ static u8 * hostapd_eid_mbssid_config(st
 }
 
 
-static bool hostapd_is_restricted_eid_in_sta_profile(u8 eid)
+static bool hostapd_is_restricted_eid_in_sta_profile(u8 eid, bool tx_vap)
 {
 	switch(eid) {
-	case WLAN_EID_SSID:
 	case WLAN_EID_TIM:
 	case WLAN_EID_BSS_MAX_IDLE_PERIOD:
 	case WLAN_EID_MULTIPLE_BSSID:
@@ -610,6 +609,9 @@ static bool hostapd_is_restricted_eid_in
 	case WLAN_EID_NEIGHBOR_REPORT:
 		return true;
 	}
+	/* SSID is not restricted for non-transmitted BSSID */
+	if (tx_vap && (eid == WLAN_EID_SSID))
+		return true;
 
 	return false;
 }
@@ -631,7 +633,7 @@ static size_t hostapd_add_sta_profile(st
 				    struct ieee80211_mgmt *link_fdata,
 				    size_t own_data_len,
 				    size_t link_data_len,
-				    u8 *sta_profile, u32 type)
+				    u8 *sta_profile, u32 type, bool tx_vap)
 {
 	/* the bitmap of parsed eids, max eid is 256, hence 32bytes to store the bitmap */
 	u8 parsed_eid_bmap[32] = {0}, parsed_ext_eid_bmap[32] = {0};
@@ -693,7 +695,7 @@ static size_t hostapd_add_sta_profile(st
 				continue;
 		} else {
 			oeid = oelem->id;
-			if (hostapd_is_restricted_eid_in_sta_profile(oeid))
+			if (hostapd_is_restricted_eid_in_sta_profile(oeid, tx_vap))
 				continue;
 		}
 
@@ -751,7 +753,7 @@ static size_t hostapd_add_sta_profile(st
 			leid = lelem->id;
 			if (parsed_eid_bmap[leid/8] & BIT(leid%8))
 				continue;
-			if (hostapd_is_restricted_eid_in_sta_profile(leid))
+			if (hostapd_is_restricted_eid_in_sta_profile(leid, tx_vap))
 				continue;
 		}
 
@@ -800,7 +802,7 @@ static u8 * hostapd_gen_sta_profile(stru
 			     struct ieee80211_mgmt *link_data,
 			     size_t own_data_len,
 			     size_t link_data_len,
-			     size_t *sta_profile_len, u32 type)
+			     size_t *sta_profile_len, u32 type, bool tx_vap)
 {
 	u8 *sta_profile;
 
@@ -811,7 +813,7 @@ static u8 * hostapd_gen_sta_profile(stru
 	*sta_profile_len = hostapd_add_sta_profile(own_data, link_data,
 						   own_data_len,
 						   link_data_len,
-						   NULL, type);
+						   NULL, type, tx_vap);
 
 	if (!(*sta_profile_len))
 		return NULL;
@@ -822,7 +824,7 @@ static u8 * hostapd_gen_sta_profile(stru
 		return NULL;
 
 	hostapd_add_sta_profile(own_data, link_data, own_data_len,
-				link_data_len, sta_profile, type);
+				link_data_len, sta_profile, type, tx_vap);
 
 	return sta_profile;
 }
@@ -833,6 +835,7 @@ static void hostapd_gen_per_sta_profiles
 	struct hostapd_data *link_bss;
 	size_t own_data_len, link_data_len, sta_profile_len;
 	u8 *sta_profile, link_id;
+	bool tx_vap = (hapd == hostapd_mbssid_get_tx_bss(hapd));
 
 	if (!hapd->conf->mld_ap)
 		return;
@@ -874,7 +877,7 @@ static void hostapd_gen_per_sta_profiles
 		sta_profile = hostapd_gen_sta_profile(own_data, link_data,
 						      own_data_len, link_data_len,
 						      &sta_profile_len,
-						      WLAN_FC_STYPE_PROBE_RESP);
+						      WLAN_FC_STYPE_PROBE_RESP, tx_vap);
 
 		if (sta_profile == NULL || sta_profile_len > EHT_ML_MAX_STA_PROF_LEN) {
 			wpa_printf(MSG_ERROR, "Couldnt generate Link STA profile");
