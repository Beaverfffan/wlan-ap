From 886e8835dde9a2bd0b8729be3ebd06b38f9a0348 Mon Sep 17 00:00:00 2001
From: Sowmiya Sree Elavalagan <quic_ssreeela@quicinc.com>
Date: Mon, 24 Jun 2024 17:16:38 +0530
Subject: [PATCH 4/4] hostapd: Include EHT basic ML info for critical
 update.patch

Add critical update check for EHT basic ML info when
number of simultaneous links get modified on link addition.

Patch-depdendency: r04-007-hostapd-Add-NL-attribute-to-set-critical-update-para.patch

Signed-off-by: Sowmiya Sree Elavalagan <quic_ssreeela@quicinc.com>
---
 src/ap/beacon.c  | 11 ++++++++---
 src/ap/hostapd.h |  1 +
 2 files changed, 9 insertions(+), 3 deletions(-)

--- a/src/ap/beacon.c
+++ b/src/ap/beacon.c
@@ -2222,7 +2222,7 @@ static u8 * hostapd_fils_discovery(struc
 
 
 #ifdef CONFIG_IEEE80211BE
-static void hostapd_eid_update_cu_info(struct hostapd_data *hapd, u8 *elemid_modified,
+static void hostapd_eid_update_cu_info(struct hostapd_data *hapd, u16 *elemid_modified,
 				       const u8 *eid_pos, size_t eid_len,
 				       enum elemid_cu eid_cu)
 {
@@ -2259,7 +2259,7 @@ int ieee802_11_build_ap_params(struct ho
 	u8 *pos, *tailpos, *tailend, *csa_pos;
 	bool complete = false;
 	u8 *startpos;
-	u8 elemid_modified = 0;
+	u16 elemid_modified = 0;
 #endif /* NEED_AP_MLME */
 	struct hostapd_data *lhapd;
 
@@ -2553,9 +2553,14 @@ int ieee802_11_build_ap_params(struct ho
 
 #ifdef CONFIG_IEEE80211BE
 	if (hapd->iconf->ieee80211be && !hapd->conf->disable_11be) {
-		if (hapd->conf->mld_ap)
+		if (hapd->conf->mld_ap) {
+			startpos = tailpos;
 			tailpos = hostapd_eid_eht_basic_ml(hapd, tailpos, NULL,
 							   false, WLAN_FC_STYPE_BEACON, NULL);
+			hostapd_eid_update_cu_info(hapd, &elemid_modified, startpos,
+						   tailpos-startpos, ELEMID_CU_PARAM_EXT_ML);
+		}
+
 		tailpos = hostapd_eid_eht_capab(hapd, tailpos,
 						IEEE80211_MODE_AP);
 		startpos = tailpos;
--- a/src/ap/hostapd.h
+++ b/src/ap/hostapd.h
@@ -205,6 +205,7 @@ enum elemid_cu {
 	ELEMID_CU_PARAM_WMM,
 	ELEMID_CU_PARAM_MU_EDCA,
 	ELEMID_CU_PARAM_SPATIAL_REUSE,
+	ELEMID_CU_PARAM_EXT_ML,
 
 	ELEMID_CU_PARAM_MAX,
 };
--- a/src/ap/ieee802_11.c
+++ b/src/ap/ieee802_11.c
@@ -9059,7 +9059,7 @@ static u8 * hostapd_eid_rnr_iface(struct
 				  struct hostapd_data *reporting_hapd,
 				  u8 *eid, size_t *current_len,
 				  struct mbssid_ie_profiles *skip_profiles,
-				  bool mld_update)
+				  bool mld_update, u32 type)
 {
 	struct hostapd_data *bss;
 	struct hostapd_iface *iface = hapd->iface;
@@ -9207,7 +9207,8 @@ repeat_rnr:
 				 *  b) Link ID advertised shall be 15.
 				 *  c) BPCC advertised shall be 255
 				 */
-				bss_param_change_count = bss->rx_cu_param.bpcc;
+				if (type != WLAN_FC_STYPE_BEACON)
+					bss_param_change_count = bss->rx_cu_param.bpcc;
 
 				/* If atleast one of the MLD params is Unknown, set Unknown for all
 				 * mld params.
@@ -9261,7 +9262,7 @@ repeat_rnr:
 }
 
 u8 * hostapd_eid_rnr_colocation(struct hostapd_data *hapd, u8 *eid,
-				size_t *current_len)
+				size_t *current_len, u32 type)
 {
 	struct hostapd_iface *iface;
 	size_t i;
@@ -9277,7 +9278,7 @@ u8 * hostapd_eid_rnr_colocation(struct h
 			continue;
 
 		eid = hostapd_eid_rnr_iface(iface->bss[0], hapd, eid,
-					    current_len, NULL, false);
+					    current_len, NULL, false, type);
 	}
 
 	return eid;
@@ -9308,7 +9309,7 @@ u8 * hostapd_eid_rnr_mlo(struct hostapd_
 			continue;
 
 		eid = hostapd_eid_rnr_iface(iface->bss[0], hapd, eid,
-					    current_len, skip_profiles, true);
+					    current_len, skip_profiles, true, type);
 	}
 #endif /* CONFIG_IEEE80211BE */
 	return eid;
@@ -9329,20 +9330,20 @@ u8 * hostapd_eid_rnr(struct hostapd_data
 	case WLAN_FC_STYPE_PROBE_RESP:
 		if (mode == COLOCATED_LOWER_BAND)
 			eid = hostapd_eid_rnr_colocation(hapd, eid,
-							 &current_len);
+							 &current_len, type);
 
 		if (hapd->conf->rnr && hapd->iface->num_bss > 1 &&
 		    !hapd->iconf->mbssid)
 			eid = hostapd_eid_rnr_iface(hapd, hapd, eid,
 						    &current_len, NULL,
-						    false);
+						    false, type);
 		break;
 
 	case WLAN_FC_STYPE_ACTION:
 		if (hapd->iface->num_bss > 1 && mode == STANDALONE_6GHZ)
 			eid = hostapd_eid_rnr_iface(hapd, hapd,	eid,
 						    &current_len, NULL,
-						    false);
+						    false, type);
 		break;
 
 	default:
@@ -9757,7 +9758,7 @@ u8 * hostapd_eid_mbssid(struct hostapd_d
 			cur_len = 0;
 			rnr_eid = hostapd_eid_rnr_iface(
 				hapd, hostapd_mbssid_get_tx_bss(hapd),
-				rnr_eid, &cur_len, &skip_profiles, false);
+				rnr_eid, &cur_len, &skip_profiles, false, frame_stype);
 			rnr_eid = hostapd_eid_rnr_mlo(
 				hostapd_mbssid_get_tx_bss(hapd), frame_stype,
 				rnr_eid, &skip_profiles, &cur_len);
@@ -9773,7 +9774,7 @@ u8 * hostapd_eid_mbssid(struct hostapd_d
 			rnr_eid = hostapd_eid_nr_db(hapd, rnr_eid, &cur_len);
 		if (get_colocation_mode(hapd) == COLOCATED_LOWER_BAND)
 			rnr_eid = hostapd_eid_rnr_colocation(hapd, rnr_eid,
-							     &cur_len);
+							     &cur_len, frame_stype);
 	}
 
 	return eid;
--- a/src/ap/ieee802_11_eht.c
+++ b/src/ap/ieee802_11_eht.c
@@ -655,7 +655,10 @@ u8 * hostapd_eid_eht_basic_ml(struct hos
 	wpabuf_put_u8(buf, hapd->mld_link_id);
 
 	/* BSS Parameters Change Count */
-	wpabuf_put_u8(buf, hapd->rx_cu_param.bpcc);
+	if (type == WLAN_FC_STYPE_BEACON)
+		wpabuf_put_u8(buf, 0);
+	else
+		wpabuf_put_u8(buf, hapd->rx_cu_param.bpcc);
 
 	if (!hapd->conf->disable_eml_cap) {
 		/* Reset the EMLSR Transision and Padding delay to zero for
