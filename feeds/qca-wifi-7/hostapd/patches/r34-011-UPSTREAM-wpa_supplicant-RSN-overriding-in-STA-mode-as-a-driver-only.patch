From d106e5c5682ac4e80482a7cd543a7690169ff8c7 Mon Sep 17 00:00:00 2001
From: Jouni Malinen <quic_jouni@quicinc.com>
Date: Mon, 8 Jul 2024 15:29:29 +0530
Subject: [PATCH] hostapd: RSN overriding in STA mode as a driver-only change

Simulate driver-only change with otherwise unmodified wpa_supplicant.

Patch-dependency: None

Signed-off-by: Jouni Malinen <quic_jouni@quicinc.com>
Signed-off-by: Arunpandi Kannan <quic_arunpand@quicinc.com>
---
 src/drivers/driver_nl80211.c      | 23 ++++++++++-
 src/drivers/driver_nl80211.h      |  1 +
 src/drivers/driver_nl80211_scan.c | 68 ++++++++++++++++++++++++++++++-
 tests/hwsim/test_rsn_override.py  | 20 +++++++++
 4 files changed, 108 insertions(+), 4 deletions(-)

diff --git a/src/drivers/driver_nl80211.c b/src/drivers/driver_nl80211.c
index 48474d4..a551c6c 100644
--- a/src/drivers/driver_nl80211.c
+++ b/src/drivers/driver_nl80211.c
@@ -7029,9 +7029,25 @@ static int nl80211_connect_common(struct wpa_driver_nl80211_data *drv,
 	}
 
 	wpa_hexdump(MSG_DEBUG, "  * IEs", params->wpa_ie, params->wpa_ie_len);
-	if (params->wpa_ie &&
-	    nla_put(msg, NL80211_ATTR_IE, params->wpa_ie_len, params->wpa_ie))
+	if (drv->rsn_override && params->wpa_ie) {
+		u8 *pos, *ies = os_malloc(params->wpa_ie_len + 6);
+
+		if (!ies)
+			return -1;
+
+		os_memcpy(ies, params->wpa_ie, params->wpa_ie_len);
+		pos = &ies[params->wpa_ie_len];
+		*pos++ = WLAN_EID_VENDOR_SPECIFIC;
+		*pos++ = 4;
+		WPA_PUT_BE32(pos, RSNE_OVERRIDE_IE_VENDOR_TYPE);
+		if (nla_put(msg, NL80211_ATTR_IE, params->wpa_ie_len + 6, ies))
+			return -1;
+		os_free(ies);
+	} else if (params->wpa_ie &&
+		   nla_put(msg, NL80211_ATTR_IE, params->wpa_ie_len,
+			   params->wpa_ie)) {
 		return -1;
+	}
 
 	if (params->wpa_proto) {
 		enum nl80211_wpa_versions ver = 0;
@@ -10108,6 +10124,9 @@ static int nl80211_set_param(void *priv, const char *param)
 	if (os_strstr(param, "rsn_override_in_driver=1"))
 		drv->capa.flags2 |= WPA_DRIVER_FLAGS2_RSN_OVERRIDE_STA;
 
+	if (os_strstr(param, "rsn_override=1"))
+		drv->rsn_override = 1;
+
 	return 0;
 }
 
diff --git a/src/drivers/driver_nl80211.h b/src/drivers/driver_nl80211.h
index 589b5ae..73d57dc 100644
--- a/src/drivers/driver_nl80211.h
+++ b/src/drivers/driver_nl80211.h
@@ -206,6 +206,7 @@ struct wpa_driver_nl80211_data {
 	unsigned int puncturing:1;
 	unsigned int qca_ap_allowed_freqs:1;
 	unsigned int device_bw:1;
+	unsigned int rsn_override:1;
 
 	u64 vendor_scan_cookie;
 	u64 remain_on_chan_cookie;
diff --git a/src/drivers/driver_nl80211_scan.c b/src/drivers/driver_nl80211_scan.c
index 1719dfe..d6dc45e 100644
--- a/src/drivers/driver_nl80211_scan.c
+++ b/src/drivers/driver_nl80211_scan.c
@@ -760,6 +760,50 @@ static int nl80211_scan_filtered(struct wpa_driver_nl80211_data *drv,
 }
 
 
+static u8 * override_rsn_ies(const u8 *ie, size_t *len)
+{
+	u8 *rsne, *rsnxe, *o_rsne, *o_rsnxe;
+	u8 *buf;
+
+	if (!ie)
+		return NULL;
+
+	if (!get_vendor_ie(ie, *len, RSNE_OVERRIDE_IE_VENDOR_TYPE))
+		return NULL;
+
+	buf = os_memdup(ie, *len);
+	if (!buf)
+		return NULL;
+	rsne = (u8 *) get_ie(buf, *len, WLAN_EID_RSN);
+	rsnxe = (u8 *) get_ie(buf, *len, WLAN_EID_RSNX);
+	o_rsne = (u8 *) get_vendor_ie(buf, *len, RSNE_OVERRIDE_IE_VENDOR_TYPE);
+	o_rsnxe = (u8 *) get_vendor_ie(buf, *len,
+				       RSNXE_OVERRIDE_IE_VENDOR_TYPE);
+	if (rsne)
+		rsne[0] = 254;
+	if (rsnxe)
+		rsnxe[0] = 254;
+
+	o_rsne[4] = WLAN_EID_RSN;
+	o_rsne[5] = o_rsne[1] - 4;
+	o_rsne[0] = 254;
+	o_rsne[1] = 2;
+	o_rsne[2] = 0xcc;
+	o_rsne[3] = 0xcc;
+
+	if (o_rsnxe) {
+		o_rsnxe[4] = WLAN_EID_RSNX;
+		o_rsnxe[5] = o_rsnxe[1] - 4;
+		o_rsnxe[0] = 254;
+		o_rsnxe[1] = 2;
+		o_rsnxe[2] = 0xee;
+		o_rsnxe[3] = 0xee;
+	}
+
+	return buf;
+}
+
+
 static struct wpa_scan_res *
 nl80211_parse_bss_info(struct wpa_driver_nl80211_data *drv,
 		       struct nl_msg *msg)
@@ -788,6 +832,7 @@ nl80211_parse_bss_info(struct wpa_driver_nl80211_data *drv,
 	const u8 *ie, *beacon_ie;
 	size_t ie_len, beacon_ie_len;
 	u8 *pos;
+	u8 *ie_buf = NULL, *beacon_ie_buf = NULL;
 
 	nla_parse(tb, NL80211_ATTR_MAX, genlmsg_attrdata(gnlh, 0),
 		  genlmsg_attrlen(gnlh, 0), NULL);
@@ -799,6 +844,11 @@ nl80211_parse_bss_info(struct wpa_driver_nl80211_data *drv,
 	if (bss[NL80211_BSS_INFORMATION_ELEMENTS]) {
 		ie = nla_data(bss[NL80211_BSS_INFORMATION_ELEMENTS]);
 		ie_len = nla_len(bss[NL80211_BSS_INFORMATION_ELEMENTS]);
+		if (drv->rsn_override) {
+			ie_buf = override_rsn_ies(ie, &ie_len);
+			if (ie_buf)
+				ie = ie_buf;
+		}
 	} else {
 		ie = NULL;
 		ie_len = 0;
@@ -806,18 +856,30 @@ nl80211_parse_bss_info(struct wpa_driver_nl80211_data *drv,
 	if (bss[NL80211_BSS_BEACON_IES]) {
 		beacon_ie = nla_data(bss[NL80211_BSS_BEACON_IES]);
 		beacon_ie_len = nla_len(bss[NL80211_BSS_BEACON_IES]);
+		if (drv->rsn_override) {
+			beacon_ie_buf = override_rsn_ies(beacon_ie,
+							 &beacon_ie_len);
+			if (ie_buf)
+				beacon_ie = beacon_ie_buf;
+		}
 	} else {
 		beacon_ie = NULL;
 		beacon_ie_len = 0;
 	}
 
 	if (nl80211_scan_filtered(drv, ie ? ie : beacon_ie,
-				  ie ? ie_len : beacon_ie_len))
+				  ie ? ie_len : beacon_ie_len)) {
+		os_free(ie_buf);
+		os_free(beacon_ie_buf);
 		return NULL;
+	}
 
 	r = os_zalloc(sizeof(*r) + ie_len + beacon_ie_len);
-	if (r == NULL)
+	if (!r) {
+		os_free(ie_buf);
+		os_free(beacon_ie_buf);
 		return NULL;
+	}
 	if (bss[NL80211_BSS_BSSID])
 		os_memcpy(r->bssid, nla_data(bss[NL80211_BSS_BSSID]),
 			  ETH_ALEN);
@@ -893,6 +955,8 @@ nl80211_parse_bss_info(struct wpa_driver_nl80211_data *drv,
 			  ETH_ALEN);
 	}
 
+	os_free(ie_buf);
+	os_free(beacon_ie_buf);
 	return r;
 }
 
diff --git a/tests/hwsim/test_rsn_override.py b/tests/hwsim/test_rsn_override.py
index 4e20b09..6a66cd7 100644
--- a/tests/hwsim/test_rsn_override.py
+++ b/tests/hwsim/test_rsn_override.py
@@ -214,3 +214,23 @@ def test_rsn_override_connect_cmd(dev, apdev):
     wpas.set("rsn_overriding", "1")
     wpas.connect(ssid, psk="12345678", key_mgmt="WPA-PSK-SHA256",
                  ieee80211w="2", scan_freq="2412")
+
+def test_rsn_override_drv_only(dev, apdev):
+    """RSNE=WPA2-Personal/PMF-optional override=WPA3-Personal/PMF-required using driver-only change"""
+    wpas = WpaSupplicant(global_iface='/tmp/wpas-wlan5')
+    wpas.interface_add("wlan5", drv_params="rsn_override=1")
+    check_sae_capab(wpas)
+
+    ssid = "test-rsn-override"
+    params = hostapd.wpa2_params(ssid=ssid,
+                                 passphrase="12345678",
+                                 ieee80211w='1')
+    params['rsn_override_key_mgmt'] = 'WPA-PSK-SHA256'
+    params['rsn_override_pairwise'] = 'CCMP GCMP-256'
+    params['rsn_override_mfp'] = '2'
+    params['beacon_prot'] = '1'
+    hapd = hostapd.add_ap(apdev[0], params)
+
+    wpas.set("rsn_overriding", "0")
+    wpas.connect(ssid, psk="12345678", key_mgmt="WPA-PSK-SHA256",
+                 ieee80211w="2", scan_freq="2412")
-- 
2.34.1

