From 2588d1e57922efb21e3d42f82e081328852dbcce Mon Sep 17 00:00:00 2001
From: Poovendhan Selvaraj <quic_poovendh@quicinc.com>
Date: Tue, 26 Mar 2024 15:48:06 +0530
Subject: [PATCH] drivers: mmc: configure cqhci key slot as HW key slot

Configure the cqhci key slot to zero because the HW key
always uses slot zero if hwkey is used

Signed-off-by: Poovendhan Selvaraj <quic_poovendh@quicinc.com>
Change-Id: I480b1326b22a5fbeeba1efec2b218662a27007de
---
 drivers/mmc/host/cqhci-core.c   |  6 +++++-
 drivers/mmc/host/cqhci-crypto.h | 21 +++++++++++++++++++++
 drivers/mmc/host/cqhci.h        |  2 +-
 drivers/mmc/host/sdhci-msm.c    |  6 +++++-
 4 files changed, 32 insertions(+), 3 deletions(-)

diff --git a/drivers/mmc/host/cqhci-core.c b/drivers/mmc/host/cqhci-core.c
index b3d7d6d8d654..226f02dc2335 100644
--- a/drivers/mmc/host/cqhci-core.c
+++ b/drivers/mmc/host/cqhci-core.c
@@ -442,7 +442,11 @@ static void cqhci_prep_task_desc(struct mmc_request *mrq,
 	task_desc[0] = cpu_to_le64(desc0);
 
 	if (cq_host->caps & CQHCI_TASK_DESC_SZ_128) {
-		u64 desc1 = cqhci_crypto_prep_task_desc(mrq);
+		u64 desc1;
+		if (cq_host->use_hwkey)
+			desc1 = cqhci_crypto_prep_hwkey_task_desc(mrq);
+		else
+			desc1 = cqhci_crypto_prep_task_desc(mrq);
 
 		task_desc[1] = cpu_to_le64(desc1);
 
diff --git a/drivers/mmc/host/cqhci-crypto.h b/drivers/mmc/host/cqhci-crypto.h
index d7fb084f563b..ace078db4265 100644
--- a/drivers/mmc/host/cqhci-crypto.h
+++ b/drivers/mmc/host/cqhci-crypto.h
@@ -16,6 +16,22 @@
 
 int cqhci_crypto_init(struct cqhci_host *host);
 
+/*
+ * Returns the crypto bits that should be set in bits 64-127 of the
+ * task descriptor for hwkey.
+ */
+static inline u64 cqhci_crypto_prep_hwkey_task_desc(struct mmc_request *mrq)
+{
+	if (!mrq->crypto_ctx)
+		return 0;
+
+	/* We set max_dun_bytes_supported=4, so all DUNs should be 32-bit. */
+	WARN_ON_ONCE(mrq->crypto_ctx->bc_dun[0] > U32_MAX);
+
+	return CQHCI_CRYPTO_ENABLE_BIT |
+	       mrq->crypto_ctx->bc_dun[0];
+}
+
 /*
  * Returns the crypto bits that should be set in bits 64-127 of the
  * task descriptor.
@@ -40,6 +56,11 @@ static inline int cqhci_crypto_init(struct cqhci_host *host)
 	return 0;
 }
 
+static inline u64 cqhci_crypto_prep_hwkey_task_desc(struct mmc_request *mrq)
+{
+	return 0;
+}
+
 static inline u64 cqhci_crypto_prep_task_desc(struct mmc_request *mrq)
 {
 	return 0;
diff --git a/drivers/mmc/host/cqhci.h b/drivers/mmc/host/cqhci.h
index 8f5ef8e74dcc..1c0cba89458d 100644
--- a/drivers/mmc/host/cqhci.h
+++ b/drivers/mmc/host/cqhci.h
@@ -273,8 +273,8 @@ struct cqhci_host {
 	union cqhci_crypto_capabilities crypto_capabilities;
 	union cqhci_crypto_cap_entry *crypto_cap_array;
 	u32 crypto_cfg_register;
-	bool use_hwkey;
 #endif
+	bool use_hwkey;
 };
 
 struct cqhci_host_ops {
diff --git a/drivers/mmc/host/sdhci-msm.c b/drivers/mmc/host/sdhci-msm.c
index 8fdb881160ab..02d251bd825a 100644
--- a/drivers/mmc/host/sdhci-msm.c
+++ b/drivers/mmc/host/sdhci-msm.c
@@ -2117,7 +2117,7 @@ static int sdhci_msm_program_key(struct cqhci_host *cq_host,
 	} key;
 	u32 key_size;
 	int i;
-	int err;
+	int err = 0;
 
 
 	cap = cq_host->crypto_cap_array[cfg->crypto_cap_idx];
@@ -2127,6 +2127,10 @@ static int sdhci_msm_program_key(struct cqhci_host *cq_host,
 		return -EINVAL;
 	}
 
+	if (!(cfg->config_enable & CQHCI_CRYPTO_CONFIGURATION_ENABLE)
+				&& cq_host->use_hwkey)
+		return err;
+
 	if (cq_host->use_hwkey)
 		return sdhci_msm_ice_set_hwkey_config(cq_host, cipher);
 
-- 
2.34.1

