From 421ce1d84da1b1c584a5fb6d9f17cbfc686ebc4b Mon Sep 17 00:00:00 2001
From: Shivani Soni <quic_soni@quicinc.com>
Date: Mon, 10 Apr 2023 16:31:21 +0530
Subject: [PATCH] arm/arm64: bonding: Disable HW CSUM offload for bond MLO

Disable HW CSUM offload for bond MLO netdevice

Change-Id: If3e07b0a7aa44aecb2a7abc98da7944ad4052d12
Signed-off-by: Shivani Soni <quic_soni@quicinc.com>
---
 drivers/net/bonding/bond_main.c | 28 +++++++++++++++++++++++++---
 1 file changed, 25 insertions(+), 3 deletions(-)

diff --git a/drivers/net/bonding/bond_main.c b/drivers/net/bonding/bond_main.c
index 94cb2157e810..f0b037c4ba2c 100644
--- a/drivers/net/bonding/bond_main.c
+++ b/drivers/net/bonding/bond_main.c
@@ -1449,6 +1449,10 @@ static netdev_features_t bond_fix_features(struct net_device *dev,
 	return features;
 }
 
+#define BOND_MLO_VLAN_FEATURES	(NETIF_F_SG | \
+				 NETIF_F_FRAGLIST | \
+				 NETIF_F_HIGHDMA | NETIF_F_LRO)
+
 #define BOND_VLAN_FEATURES	(NETIF_F_HW_CSUM | NETIF_F_SG | \
 				 NETIF_F_FRAGLIST | NETIF_F_GSO_SOFTWARE | \
 				 NETIF_F_HIGHDMA | NETIF_F_LRO)
@@ -1479,13 +1483,25 @@ static void bond_compute_features(struct bonding *bond)
 
 	if (!bond_has_slaves(bond))
 		goto done;
+
+	/*
+	 * Use features specific to bond MLO
+	 */
+	if (BOND_MODE(bond) == BOND_MODE_MLO) {
+		vlan_features = BOND_MLO_VLAN_FEATURES;
+	}
+
 	vlan_features &= NETIF_F_ALL_FOR_ALL;
 	mpls_features &= NETIF_F_ALL_FOR_ALL;
 
 	bond_for_each_slave(bond, slave, iter) {
-		vlan_features = netdev_increment_features(vlan_features,
-			slave->dev->vlan_features, BOND_VLAN_FEATURES);
-
+		if (BOND_MODE(bond) == BOND_MODE_MLO) {
+			vlan_features = netdev_increment_features(vlan_features,
+				slave->dev->vlan_features, BOND_MLO_VLAN_FEATURES);
+		} else {
+			vlan_features = netdev_increment_features(vlan_features,
+				slave->dev->vlan_features, BOND_VLAN_FEATURES);
+		}
 		enc_features = netdev_increment_features(enc_features,
 							 slave->dev->hw_enc_features,
 							 BOND_ENC_FEATURES);
@@ -6772,6 +6788,12 @@ struct net_device *bond_create_mlo(struct net *net, const char *name, struct mlo
 	memcpy((void *)&bond->mlo_info, (void *)mlo_info, sizeof(*mlo_info));
 	eth_hw_addr_random(bond_dev);
 
+	/*
+	 * Disable HW CSUM as wlan driver doesn't support
+	 */
+	bond_dev->hw_features &= ~(NETIF_F_HW_CSUM);
+	bond_dev->features &= ~(NETIF_F_HW_CSUM);
+
 	res = register_netdevice(bond_dev);
 	if (res < 0) {
 		free_netdev(bond_dev);
-- 
2.34.1

