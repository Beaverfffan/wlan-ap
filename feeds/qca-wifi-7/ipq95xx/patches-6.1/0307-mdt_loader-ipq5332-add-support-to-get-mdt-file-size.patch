From 77e529339348a46adc0987e8c462b68140f41339 Mon Sep 17 00:00:00 2001
From: Manikanta Mylavarapu <quic_mmanikan@quicinc.com>
Date: Tue, 2 May 2023 07:59:36 +0530
Subject: [PATCH] mdt_loader: ipq5332: add support to get mdt file size

In IPQ5332, userpd's root of trust is Q6 rootpd.
To authenticate userpd's, q6 should know userpd
load address & file size. This patch adds support
to get userpd's file size.

Change-Id: I1135c6898b1acda694bb17458d3aada266ee7456
Signed-off-by: Manikanta Mylavarapu <quic_mmanikan@quicinc.com>
---
 drivers/soc/qcom/mdt_loader.c       | 35 +++++++++++++++++++++++++++++
 include/linux/soc/qcom/mdt_loader.h |  1 +
 2 files changed, 36 insertions(+)

diff --git a/drivers/soc/qcom/mdt_loader.c b/drivers/soc/qcom/mdt_loader.c
index b5beffdd147c..4d58048f3b33 100644
--- a/drivers/soc/qcom/mdt_loader.c
+++ b/drivers/soc/qcom/mdt_loader.c
@@ -103,6 +103,41 @@ static ssize_t mdt_load_split_segment(void *ptr, const struct elf32_phdr *phdrs,
 	return ret;
 }
 
+/**
+ * qcom_mdt_get_file_size() - acquire size of the file region
+ * @fw:		firmware object for the mdt file
+ *
+ * Returns size of the loaded firmware blob, or -EINVAL on failure.
+ */
+ssize_t qcom_mdt_get_file_size(const struct firmware *fw)
+{
+	const struct elf32_phdr *phdrs;
+	const struct elf32_phdr *phdr;
+	const struct elf32_hdr *ehdr;
+	phys_addr_t min_addr = PHYS_ADDR_MAX;
+	phys_addr_t max_addr = 0;
+	int i;
+
+	ehdr = (struct elf32_hdr *)fw->data;
+	phdrs = (struct elf32_phdr *)(ehdr + 1);
+
+	for (i = 0; i < ehdr->e_phnum; i++) {
+		phdr = &phdrs[i];
+
+		if (!mdt_phdr_valid(phdr))
+			continue;
+
+		if (phdr->p_paddr < min_addr)
+			min_addr = phdr->p_paddr;
+
+		if (phdr->p_paddr + phdr->p_filesz > max_addr)
+			max_addr = phdr->p_paddr + phdr->p_filesz;
+	}
+
+	return min_addr < max_addr ? max_addr - min_addr : -EINVAL;
+}
+EXPORT_SYMBOL_GPL(qcom_mdt_get_file_size);
+
 /**
  * qcom_mdt_get_size() - acquire size of the memory region needed to load mdt
  * @fw:		firmware object for the mdt file
diff --git a/include/linux/soc/qcom/mdt_loader.h b/include/linux/soc/qcom/mdt_loader.h
index 57021236dfc9..f27b075d62c3 100644
--- a/include/linux/soc/qcom/mdt_loader.h
+++ b/include/linux/soc/qcom/mdt_loader.h
@@ -20,6 +20,7 @@ struct qcom_scm_pas_metadata;
 #if IS_ENABLED(CONFIG_QCOM_MDT_LOADER)
 
 ssize_t qcom_mdt_get_size(const struct firmware *fw);
+ssize_t qcom_mdt_get_file_size(const struct firmware *fw);
 int qcom_mdt_pas_init(struct device *dev, const struct firmware *fw,
 		      const char *fw_name, int pas_id, phys_addr_t mem_phys,
 		      struct qcom_scm_pas_metadata *pas_metadata_ctx);
-- 
2.34.1

