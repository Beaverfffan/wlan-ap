From 4ae9e12b64facac6f64f2d670f59d514cd44f3c2 Mon Sep 17 00:00:00 2001
From: Sridharan S N <quic_sridsn@quicinc.com>
Date: Tue, 7 Nov 2023 12:18:41 +0530
Subject: [PATCH] firmware: scm: disable SDI when crashdump is not enabled

The Boot remapper is configured to SDI handler by TZ. In crashdump
disabled case, we need to clear the SDI handler, else TZ will end up
in enter into SDI handler path, which is not correct. So disable the
SDI in the crashdump disabled case.

Change-Id: Ib7dba096bb17fb0ab6fb505fa5efa05fb0b4375c
Signed-off-by: Sridharan S N <quic_sridsn@quicinc.com>
---
 drivers/firmware/qcom_scm.c | 25 +++++++++++++++++++++++++
 drivers/firmware/qcom_scm.h |  2 ++
 2 files changed, 27 insertions(+)

diff --git a/drivers/firmware/qcom_scm.c b/drivers/firmware/qcom_scm.c
index c59804a6b9c1..57557c35a70b 100644
--- a/drivers/firmware/qcom_scm.c
+++ b/drivers/firmware/qcom_scm.c
@@ -2752,6 +2752,30 @@ int __qti_scm_aes_clear_key_handle(struct device *dev, uint32_t key_handle, u32
 	return ret ? : res.result[0];
 }
 
+int qcom_scm_sdi_disable(struct device *dev)
+{
+	int ret;
+	struct qcom_scm_res res;
+	ret = qcom_scm_clk_enable();
+	if (ret)
+		return ret;
+
+	struct qcom_scm_desc desc = {
+		.svc = QCOM_SCM_SVC_BOOT,
+		.cmd = SCM_CMD_TZ_CONFIG_HW_FOR_RAM_DUMP_ID,
+		.args[0] = 1ull, /* Disable wdog debug */
+		.args[1] = 0ull, /* SDI Enable */
+		.arginfo = QCOM_SCM_ARGS(2, QCOM_SCM_VAL, QCOM_SCM_VAL),
+		.owner = ARM_SMCCC_OWNER_SIP,
+	};
+
+	ret = qcom_scm_call(__scm->dev, &desc, &res);
+
+	qcom_scm_clk_disable();
+	return ret ? : res.result[0];
+}
+EXPORT_SYMBOL(qcom_scm_sdi_disable);
+
 static int qcom_scm_probe(struct platform_device *pdev)
 {
 	struct qcom_scm *scm;
@@ -2850,6 +2874,7 @@ static int qcom_scm_probe(struct platform_device *pdev)
 		qcom_scm_set_cpu_regsave();
 	}
 	else {
+		qcom_scm_sdi_disable(__scm->dev);
 		qcom_scm_set_abnormal_magic(true);
 	}
 
diff --git a/drivers/firmware/qcom_scm.h b/drivers/firmware/qcom_scm.h
index a81c74785187..83923c9fd71a 100644
--- a/drivers/firmware/qcom_scm.h
+++ b/drivers/firmware/qcom_scm.h
@@ -95,6 +95,8 @@ extern int __qti_scm_tz_hvc_log(struct device *dev, u32 svc_id, u32 cmd_id,
 #define QCOM_SCM_GET_TZ_LOG_ENCRYPTED	0xc
 #define QCOM_SCM_ABNORMAL_MAGIC		0x40
 
+#define SCM_CMD_TZ_CONFIG_HW_FOR_RAM_DUMP_ID	0x9
+
 #define QCOM_SCM_SVC_PIL		0x02
 #define QCOM_SCM_PIL_PAS_INIT_IMAGE	0x01
 #define QCOM_SCM_PAS_INIT_IMAGE_V2_CMD  0x1a
-- 
2.34.1

