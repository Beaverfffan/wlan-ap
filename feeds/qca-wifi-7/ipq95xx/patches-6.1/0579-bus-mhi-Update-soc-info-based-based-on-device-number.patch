From 08fb8123b17f4c7b4b902f71107646193476bc23 Mon Sep 17 00:00:00 2001
From: Vignesh Viswanathan <quic_viswanat@quicinc.com>
Date: Thu, 30 Nov 2023 16:50:15 +0530
Subject: [PATCH] bus: mhi: Update soc info based based on device number

QCN9224 uses different offsets for major and minor version number in
SOC_INFO register.

Check if the device is QCN9224 based on family/device number and get the
major/minor numbers from the correct offsets.

Also, use the family/device number to check for QCN9224 device for
license download instead of pci device ID.

Change-Id: I15121ff3996a76c2440c1d820d849602e51e0826
Signed-off-by: Ram Kumar D <quic_ramd@quicinc.com>
Signed-off-by: Vignesh Viswanathan <quic_viswanat@quicinc.com>
---
 drivers/bus/mhi/host/boot.c     |  3 +--
 drivers/bus/mhi/host/init.c     | 16 ++++++++++++++--
 drivers/bus/mhi/host/internal.h |  9 ++++++++-
 3 files changed, 23 insertions(+), 5 deletions(-)

diff --git a/drivers/bus/mhi/host/boot.c b/drivers/bus/mhi/host/boot.c
index 01d0182a4297..b1ff5af2310d 100644
--- a/drivers/bus/mhi/host/boot.c
+++ b/drivers/bus/mhi/host/boot.c
@@ -865,7 +865,6 @@ int mhi_download_amss_image(struct mhi_controller *mhi_cntrl)
 	struct image_info *image_info = mhi_cntrl->fbc_image;
 	struct device *dev = &mhi_cntrl->mhi_dev->dev;
 	enum mhi_pm_state new_state;
-	struct pci_dev *pdev = to_pci_dev(mhi_cntrl->cntrl_dev);
 	int ret;
 
 	if (!image_info)
@@ -877,7 +876,7 @@ int mhi_download_amss_image(struct mhi_controller *mhi_cntrl)
 		return ret;
 	}
 
-	if (pdev && pdev->device == QCN9224_DEVICE_ID) {
+	if (IS_QCN9224_DEV(mhi_cntrl)) {
 		/* Download the License */
 		mhi_download_fw_license(mhi_cntrl);
 	}
diff --git a/drivers/bus/mhi/host/init.c b/drivers/bus/mhi/host/init.c
index 087d047a1372..9671e383d187 100644
--- a/drivers/bus/mhi/host/init.c
+++ b/drivers/bus/mhi/host/init.c
@@ -1058,8 +1058,20 @@ int mhi_register_controller(struct mhi_controller *mhi_cntrl,
 
 	mhi_cntrl->family_number = FIELD_GET(SOC_HW_VERSION_FAM_NUM_BMSK, soc_info);
 	mhi_cntrl->device_number = FIELD_GET(SOC_HW_VERSION_DEV_NUM_BMSK, soc_info);
-	mhi_cntrl->major_version = FIELD_GET(SOC_HW_VERSION_MAJOR_VER_BMSK, soc_info);
-	mhi_cntrl->minor_version = FIELD_GET(SOC_HW_VERSION_MINOR_VER_BMSK, soc_info);
+
+	if (IS_QCN9224_DEV(mhi_cntrl)) {
+		mhi_cntrl->major_version =
+			FIELD_GET(QCN9224_SOC_HW_VERSION_MAJOR_VER_BMSK,
+				  soc_info);
+		mhi_cntrl->minor_version =
+			FIELD_GET(QCN9224_SOC_HW_VERSION_MINOR_VER_BMSK,
+				  soc_info);
+	} else {
+		mhi_cntrl->major_version =
+			FIELD_GET(SOC_HW_VERSION_MAJOR_VER_BMSK, soc_info);
+		mhi_cntrl->minor_version =
+			FIELD_GET(SOC_HW_VERSION_MINOR_VER_BMSK, soc_info);
+	}
 
 	mhi_cntrl->index = ida_alloc(&mhi_controller_ida, GFP_KERNEL);
 	if (mhi_cntrl->index < 0) {
diff --git a/drivers/bus/mhi/host/internal.h b/drivers/bus/mhi/host/internal.h
index 651742476b5c..2cb27aa8753b 100644
--- a/drivers/bus/mhi/host/internal.h
+++ b/drivers/bus/mhi/host/internal.h
@@ -15,12 +15,19 @@ extern struct bus_type mhi_bus_type;
 #define MHI_SOC_RESET_REQ_OFFSET			0xb0
 #define MHI_SOC_RESET_REQ				BIT(0)
 
-#define QCN9224_DEVICE_ID				(0x1109)
+#define QCN9224_FAMILY_NUM				(0x4)
+#define QCN9224_DEVICE_NUM				(0x1A)
 #define SOC_HW_VERSION_OFFS				0x224
 #define SOC_HW_VERSION_FAM_NUM_BMSK			GENMASK(31, 28)
 #define SOC_HW_VERSION_DEV_NUM_BMSK			GENMASK(27, 16)
 #define SOC_HW_VERSION_MAJOR_VER_BMSK			GENMASK(15, 8)
 #define SOC_HW_VERSION_MINOR_VER_BMSK			GENMASK(7, 0)
+#define QCN9224_SOC_HW_VERSION_MAJOR_VER_BMSK		GENMASK(11, 8)
+#define QCN9224_SOC_HW_VERSION_MINOR_VER_BMSK		GENMASK(7, 4)
+
+#define IS_QCN9224_DEV(mhi_cntrl) \
+	((mhi_cntrl->family_number == QCN9224_FAMILY_NUM && \
+	  mhi_cntrl->device_number == QCN9224_DEVICE_NUM) ? true : false)
 
 struct mhi_ctxt {
 	struct mhi_event_ctxt *er_ctxt;
-- 
2.34.1

