From 75e78901330cab83be0974fe987a75f86da166cc Mon Sep 17 00:00:00 2001
From: Hariharan K <quic_harihk@quicinc.com>
Date: Sun, 3 Dec 2023 23:30:27 +0530
Subject: [PATCH] bus: mhi: Check return value

Check the return value of mhi_read_reg
API to avoid unused result warnings.

Change-Id: Iab191c0f8fd960d4e8d88da19c4bf4d0c060cfe7
Signed-off-by: Hariharan K <quic_harihk@quicinc.com>
---
 drivers/bus/mhi/host/boot.c | 9 +++++++--
 1 file changed, 7 insertions(+), 2 deletions(-)

diff --git a/drivers/bus/mhi/host/boot.c b/drivers/bus/mhi/host/boot.c
index e73300e6f079..104ab8ffc715 100644
--- a/drivers/bus/mhi/host/boot.c
+++ b/drivers/bus/mhi/host/boot.c
@@ -647,10 +647,13 @@ static int mhi_update_scratch_reg(struct mhi_controller *mhi_cntrl, u32 val)
 {
 	struct device *dev = &mhi_cntrl->mhi_dev->dev;
 	u32 rd_val;
+	int ret = 0;
 
 	/* Program Window register to update boot args pointer */
-	mhi_read_reg(mhi_cntrl, mhi_cntrl->regs, PCIE_REMAP_BAR_CTRL_OFFSET,
+	ret = mhi_read_reg(mhi_cntrl, mhi_cntrl->regs, PCIE_REMAP_BAR_CTRL_OFFSET,
 			&rd_val);
+	if (ret)
+		return ret;
 
 	rd_val = rd_val & ~(0x3f);
 
@@ -660,8 +663,10 @@ static int mhi_update_scratch_reg(struct mhi_controller *mhi_cntrl, u32 val)
 	mhi_write_reg(mhi_cntrl, mhi_cntrl->regs + MAX_UNWINDOWED_ADDRESS,
 			PCIE_REG_FOR_BOOT_ARGS, val);
 
-	mhi_read_reg(mhi_cntrl, mhi_cntrl->regs + MAX_UNWINDOWED_ADDRESS,
+	ret = mhi_read_reg(mhi_cntrl, mhi_cntrl->regs + MAX_UNWINDOWED_ADDRESS,
 			PCIE_REG_FOR_BOOT_ARGS,	&rd_val);
+	if (ret)
+		return ret;
 
 	if (rd_val != val) {
 		dev_err(dev, "Write to PCIE_REG_FOR_BOOT_ARGS register failed\n");
-- 
2.34.1

