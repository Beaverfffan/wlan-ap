Index: linux-5.4.246/drivers/char/tpm/tpm_tis_spi.c
===================================================================
--- linux-5.4.246.orig/drivers/char/tpm/tpm_tis_spi.c
+++ linux-5.4.246/drivers/char/tpm/tpm_tis_spi.c
@@ -199,11 +199,35 @@ static const struct tpm_tis_phy_ops tpm_
 	.do_calibration = tpm_tis_spi_do_calibration,
 };
 
+int reset_tpm(struct spi_device *dev)
+{
+	int error;
+	struct gpio_desc *reset_gpio;
+	reset_gpio = gpiod_get_optional(&dev->dev, "reset", GPIOD_OUT_LOW);
+	error = PTR_ERR_OR_ZERO(reset_gpio);
+
+	printk("Doing tpm reset!!");
+
+	if(error) {
+		printk("get tpm reset gpio fail!!!!!\n");
+		return error;
+	}
+
+	if(reset_gpio)
+		gpiod_set_consumer_name(reset_gpio, "TPM reset");
+
+	return 0;
+}
+
 static int tpm_tis_spi_probe(struct spi_device *dev)
 {
 	struct tpm_tis_spi_phy *phy;
 	int irq;
 
+	if(reset_tpm(dev)){
+		printk("!!!tpm reset fail!!\n");
+	}
+
 	phy = devm_kzalloc(&dev->dev, sizeof(struct tpm_tis_spi_phy),
 			   GFP_KERNEL);
 	if (!phy)
Index: linux-5.4.246/drivers/spi/spi.c
===================================================================
--- linux-5.4.246.orig/drivers/spi/spi.c
+++ linux-5.4.246/drivers/spi/spi.c
@@ -1124,8 +1124,17 @@ int spi_do_calibration(struct spi_contro
 	bool hit;
 
 	/* Make sure we can start calibration */
+#if 1
+	if(!ctlr->cal_target || !ctlr->cal_rule) {
+		return 0;
+	} else if(!ctlr->append_caldata) {
+		pr_err("%s: calibration is enabled but no controller data.\n", __func__);
+		return -EINVAL;
+	}
+#else
 	if(!ctlr->cal_target || !ctlr->cal_rule || !ctlr->append_caldata)
 		return -EINVAL;
+#endif
 	datalen = ctlr->cal_rule->datalen;
 	addrlen = ctlr->cal_rule->addrlen;
 

