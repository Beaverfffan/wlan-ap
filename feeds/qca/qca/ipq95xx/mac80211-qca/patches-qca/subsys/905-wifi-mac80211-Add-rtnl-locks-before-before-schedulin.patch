From cc098dbe94926a3ff8a4a2c58dab0da9e611d5dd Mon Sep 17 00:00:00 2001
From: Ramanathan Choodamani <quic_rchoodam@quicinc.com>
Date: Wed, 20 Dec 2023 14:42:16 -0800
Subject: [PATCH] wifi: mac80211: Add rtnl locks before scheduling
 autodisconnect

The cfg80211_autodisconnect worker threads have the rtnl lock and then
do a stop_ap bringing down the device and then release the rtnl lock,
which fails to destroy the bonded device due to deadlocks.
Add rtnl locks before scheduling the cfg80211_autodisconnect work queue
as this will ensure all the worker threads to disconnect with the lock
held and then release after all the slaves are destroyed.

Signed-off-by: Ramanathan Choodamani <quic_rchoodam@quicinc.com>
---
 net/wireless/nl80211.c | 2 ++
 net/wireless/sme.c     | 2 --
 2 files changed, 2 insertions(+), 2 deletions(-)

diff --git a/net/wireless/nl80211.c b/net/wireless/nl80211.c
index 0de017c..e95d34b 100644
--- a/net/wireless/nl80211.c
+++ b/net/wireless/nl80211.c
@@ -20938,6 +20938,7 @@ static int nl80211_netlink_notify(struct notifier_block * nb,
 	if (state != NETLINK_URELEASE || notify->protocol != NETLINK_GENERIC)
 		return NOTIFY_DONE;
 
+	rtnl_lock();
 	rcu_read_lock();
 
 	list_for_each_entry_rcu(rdev, &cfg80211_rdev_list, list) {
@@ -20985,6 +20986,7 @@ static int nl80211_netlink_notify(struct notifier_block * nb,
 	 * indoor setting disappeared, so notify the regulatory core.
 	 */
 	regulatory_netlink_notify(notify->portid);
+	rtnl_unlock();
 	return NOTIFY_OK;
 }
 
diff --git a/net/wireless/sme.c b/net/wireless/sme.c
index d38a650..5da8523 100644
--- a/net/wireless/sme.c
+++ b/net/wireless/sme.c
@@ -1584,7 +1584,6 @@ void cfg80211_autodisconnect_wk(struct work_struct *work)
 		container_of(work, struct wireless_dev, disconnect_wk);
 	struct cfg80211_registered_device *rdev = wiphy_to_rdev(wdev->wiphy);
 
-	rtnl_lock();
 	wiphy_lock(&rdev->wiphy);
 	wdev_lock(wdev);
 
@@ -1625,5 +1624,4 @@ void cfg80211_autodisconnect_wk(struct work_struct *work)
 
 	wdev_unlock(wdev);
 	wiphy_unlock(&rdev->wiphy);
-	rtnl_unlock();
 }
-- 
2.25.1

