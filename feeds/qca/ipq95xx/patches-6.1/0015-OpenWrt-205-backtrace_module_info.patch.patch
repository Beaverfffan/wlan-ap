From 484dac839c81fb2c365e74fe2a3674ce365f08ec Mon Sep 17 00:00:00 2001
From: Felix Fietkau <nbd@nbd.name>
Date: Thu, 16 Mar 2023 10:18:00 +0530
Subject: [PATCH 015/281] OpenWrt: 205-backtrace_module_info.patch

kernel: when KALLSYMS is disabled, print module address + size for matching backtrace entries

[john@phrozen.org: felix will add this to his upstream queue]

lede-commit 53827cdc824556cda910b23ce5030c363b8f1461
Signed-off-by: Felix Fietkau <nbd@nbd.name>

Change-Id: I048517c92ed86f3d805cd8d86644ff6711d66e50
Signed-off-by: Ram Chandra Jangir <quic_rjangir@quicinc.com>
---
 lib/vsprintf.c | 12 ++++++++++--
 1 file changed, 10 insertions(+), 2 deletions(-)

diff --git a/lib/vsprintf.c b/lib/vsprintf.c
index 24f37bab8bc1..fcb6dea08b55 100644
--- a/lib/vsprintf.c
+++ b/lib/vsprintf.c
@@ -985,8 +985,10 @@ char *symbol_string(char *buf, char *end, void *ptr,
 		    struct printf_spec spec, const char *fmt)
 {
 	unsigned long value;
-#ifdef CONFIG_KALLSYMS
 	char sym[KSYM_SYMBOL_LEN];
+#ifndef CONFIG_KALLSYMS
+	struct module *mod;
+	int len;
 #endif
 
 	if (fmt[1] == 'R')
@@ -1007,8 +1009,14 @@ char *symbol_string(char *buf, char *end, void *ptr,
 
 	return string_nocheck(buf, end, sym, spec);
 #else
-	return special_hex_number(buf, end, value, sizeof(void *));
+	len = snprintf(sym, sizeof(sym), "0x%lx", value);
+	mod = __module_address(value);
+	if (mod)
+		snprintf(sym + len, sizeof(sym) - len, " [%s@%p+0x%x]",
+			 mod->name, mod->core_layout.base,
+			 mod->core_layout.size);
 #endif
+	return string(buf, end, sym, spec);
 }
 
 static const struct printf_spec default_str_spec = {
-- 
2.17.1

