From 45191a93fb42e42d2632a96fcacbe2dc012cc3d4 Mon Sep 17 00:00:00 2001
From: Poovendhan Selvaraj <quic_poovendh@quicinc.com>
Date: Mon, 11 Dec 2023 12:06:20 +0530
Subject: [PATCH] block : Add support for ECB mode in ice emmc driver

Change-Id: I7afce461b1f58609df2cb739e9feacf555158b1b
Signed-off-by: Poovendhan Selvaraj <quic_poovendh@quicinc.com>
(cherry picked from commit 9adc29ef773aebe671328070312be87521ccacaf)
---
 block/blk-crypto.c              | 12 ++++++++++++
 drivers/md/dm-crypt.c           |  8 ++++++--
 drivers/mmc/host/cqhci-crypto.c |  8 ++++++++
 drivers/mmc/host/sdhci-msm.c    | 18 +++++++++++++++++-
 include/linux/blk-crypto.h      |  2 ++
 5 files changed, 45 insertions(+), 3 deletions(-)

diff --git a/block/blk-crypto.c b/block/blk-crypto.c
index 544a65af7818..772672e14e52 100644
--- a/block/blk-crypto.c
+++ b/block/blk-crypto.c
@@ -55,6 +55,18 @@ const struct blk_crypto_mode blk_crypto_modes[] = {
 		.keysize = 32,
 		.ivsize = 16,
 	},
+	[BLK_ENCRYPTION_MODE_AES_128_ECB] = {
+		.name = "AES-128-ECB",
+		.cipher_str = "ecb(aes)",
+		.keysize = 16,
+		.ivsize = 16,
+	},
+	[BLK_ENCRYPTION_MODE_AES_256_ECB] = {
+		.name = "AES-256-ECB",
+		.cipher_str = "ecb(aes)",
+		.keysize = 32,
+		.ivsize = 16,
+	},
 };
 
 /*
diff --git a/drivers/md/dm-crypt.c b/drivers/md/dm-crypt.c
index 8cdf373121ee..ff5905698f5a 100644
--- a/drivers/md/dm-crypt.c
+++ b/drivers/md/dm-crypt.c
@@ -2393,9 +2393,13 @@ static int crypt_select_inline_crypt_mode(struct dm_target *ti, char *cipher,
 	} else if (strcmp(cipher, "xts(aes256)") == 0) {
 		cc->crypto_mode = BLK_ENCRYPTION_MODE_AES_256_XTS;
 	} else if (strcmp(cipher, "cbc(aes256)") == 0) {
-		cc->crypto_mode = BLK_ENCRYPTION_MODE_AES_128_CBC;
-	} else if (strcmp(cipher, "cbc(aes128)") == 0) {
 		cc->crypto_mode = BLK_ENCRYPTION_MODE_AES_256_CBC;
+	} else if (strcmp(cipher, "cbc(aes128)") == 0) {
+		cc->crypto_mode = BLK_ENCRYPTION_MODE_AES_128_CBC;
+	} else if (strcmp(cipher, "ecb(aes256)") == 0) {
+		cc->crypto_mode = BLK_ENCRYPTION_MODE_AES_256_ECB;
+	} else if (strcmp(cipher, "ecb(aes128)") == 0) {
+		cc->crypto_mode = BLK_ENCRYPTION_MODE_AES_128_ECB;
 	} else {
 		ti->error = "Invalid cipher for inline_crypt";
 		return -EINVAL;
diff --git a/drivers/mmc/host/cqhci-crypto.c b/drivers/mmc/host/cqhci-crypto.c
index ca7295284496..b166ac20c3be 100644
--- a/drivers/mmc/host/cqhci-crypto.c
+++ b/drivers/mmc/host/cqhci-crypto.c
@@ -32,6 +32,14 @@ static const struct cqhci_crypto_alg_entry {
 		.alg = CQHCI_CRYPTO_ALG_BITLOCKER_AES_CBC,
 		.key_size = CQHCI_CRYPTO_KEY_SIZE_256,
 	},
+	[BLK_ENCRYPTION_MODE_AES_128_ECB] = {
+		.alg = CQHCI_CRYPTO_ALG_AES_ECB,
+		.key_size = CQHCI_CRYPTO_KEY_SIZE_128,
+	},
+	[BLK_ENCRYPTION_MODE_AES_256_ECB] = {
+		.alg = CQHCI_CRYPTO_ALG_AES_ECB,
+		.key_size = CQHCI_CRYPTO_KEY_SIZE_256,
+	},
 };
 
 static inline struct cqhci_host *
diff --git a/drivers/mmc/host/sdhci-msm.c b/drivers/mmc/host/sdhci-msm.c
index 933adfc5c82a..8fdb881160ab 100644
--- a/drivers/mmc/host/sdhci-msm.c
+++ b/drivers/mmc/host/sdhci-msm.c
@@ -2030,6 +2030,22 @@ static int sdhci_msm_get_scm_algo_mode(struct cqhci_host *cq_host,
 			*key_size = AES_128_CBC_KEY_SIZE;
 		}
 		break;
+	case CQHCI_CRYPTO_ALG_AES_ECB:
+		/* ECB mode only supports for HW key slot */
+		if (!cq_host->use_hwkey) {
+			dev_err_ratelimited(dev, "Unhandled crypto capability; "
+					"algorithm_id=%d, key_size=%d\n",
+					cap.algorithm_id, cap.key_size);
+			return -EINVAL;
+		}
+		if (cap.key_size == CQHCI_CRYPTO_KEY_SIZE_256) {
+			*cipher = QCOM_SCM_ICE_CIPHER_AES_256_ECB;
+			*key_size = AES_256_CBC_KEY_SIZE;
+		} else {
+			*cipher = QCOM_SCM_ICE_CIPHER_AES_128_ECB;
+			*key_size = AES_128_CBC_KEY_SIZE;
+		}
+		break;
 	default:
 		dev_err_ratelimited(dev, "Unhandled crypto capability; algorithm_id=%d, key_size=%d\n",
 				    cap.algorithm_id, cap.key_size);
@@ -2111,7 +2127,7 @@ static int sdhci_msm_program_key(struct cqhci_host *cq_host,
 		return -EINVAL;
 	}
 
-	if (cq_host->use_hwkey == 1)
+	if (cq_host->use_hwkey)
 		return sdhci_msm_ice_set_hwkey_config(cq_host, cipher);
 
 	if (!(cfg->config_enable & CQHCI_CRYPTO_CONFIGURATION_ENABLE))
diff --git a/include/linux/blk-crypto.h b/include/linux/blk-crypto.h
index e0088b47ed90..7f433802646c 100644
--- a/include/linux/blk-crypto.h
+++ b/include/linux/blk-crypto.h
@@ -16,6 +16,8 @@ enum blk_crypto_mode_num {
 	BLK_ENCRYPTION_MODE_ADIANTUM,
 	BLK_ENCRYPTION_MODE_AES_128_CBC,
 	BLK_ENCRYPTION_MODE_AES_256_CBC,
+	BLK_ENCRYPTION_MODE_AES_128_ECB,
+	BLK_ENCRYPTION_MODE_AES_256_ECB,
 	BLK_ENCRYPTION_MODE_MAX,
 };
 
-- 
2.34.1

