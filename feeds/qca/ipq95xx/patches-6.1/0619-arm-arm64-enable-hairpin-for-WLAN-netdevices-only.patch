From c34ea77e55a26d2903f2dea5051f7707d60f8911 Mon Sep 17 00:00:00 2001
From: Pavithra R <quic_pavir@quicinc.com>
Date: Tue, 9 Jan 2024 17:10:22 +0530
Subject: [PATCH] arm/arm64: enable hairpin for WLAN netdevices only.

enable hairpin for the WLAN netdevices.
For ethernet interfaces, hairpin not allowed
due to issues with switchdevs.

Change-Id: I1f805cf367de25693e5235ef28e3e6a9810741a1
Signed-off-by: Pavithra R <quic_pavir@quicinc.com>
(cherry picked from commit 131032ed5a25245fdc0415f936fe513c0fc7f88d)
---
 net/bridge/br_forward.c | 28 +++++++++++++++++++++++-----
 1 file changed, 23 insertions(+), 5 deletions(-)

diff --git a/net/bridge/br_forward.c b/net/bridge/br_forward.c
index 550cfa15fd55..b41be2778b3a 100644
--- a/net/bridge/br_forward.c
+++ b/net/bridge/br_forward.c
@@ -24,11 +24,29 @@ static inline int should_deliver(const struct net_bridge_port *p,
 	struct net_bridge_vlan_group *vg;
 
 	vg = nbp_vlan_group_rcu(p);
-	return (((p->flags & BR_HAIRPIN_MODE) && !is_multicast_ether_addr(eth_hdr(skb)->h_dest))
-		|| skb->dev != p->dev) &&
-		p->state == BR_STATE_FORWARDING && br_allowed_egress(vg, skb) &&
-		nbp_switchdev_allowed_egress(p, skb) &&
-		!br_skb_isolated(p, skb);
+
+	if ((skb->dev != p->dev) &&
+	    br_allowed_egress(vg, skb) && p->state == BR_STATE_FORWARDING &&
+	    nbp_switchdev_allowed_egress(p, skb) &&
+	    !br_skb_isolated(p, skb)) {
+		return true;
+	}
+
+	if ((skb->dev == p->dev) &&
+	    (p->flags & BR_HAIRPIN_MODE) &&
+	    br_allowed_egress(vg, skb) && p->state == BR_STATE_FORWARDING) {
+
+		/* Allow hairpin only on WLAN netdevices.
+		 * For ethernet interfaces, hairpin not allowed
+		 * due to issue with switchdevs. */
+		if ( skb->dev->ieee80211_ptr == NULL) {
+			return false;
+		}
+
+		return true;
+	}
+
+	return false;
 }
 
 int br_dev_queue_push_xmit(struct net *net, struct sock *sk, struct sk_buff *skb)
-- 
2.34.1

