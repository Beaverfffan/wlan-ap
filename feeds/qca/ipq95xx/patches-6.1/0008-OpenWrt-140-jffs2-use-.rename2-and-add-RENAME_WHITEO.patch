From c0d1d2de9642704c604030e459656bc5caaa6702 Mon Sep 17 00:00:00 2001
From: Felix Fietkau <nbd@nbd.name>
Date: Thu, 16 Mar 2023 09:37:06 +0530
Subject: [PATCH 008/281] OpenWrt:
 140-jffs2-use-.rename2-and-add-RENAME_WHITEOUT-support.patch

jffs2: use .rename2 and add RENAME_WHITEOUT support

It is required for renames on overlayfs

Signed-off-by: Felix Fietkau <nbd@nbd.name>

Change-Id: I4791e5fc6cb5e9a095464200021cf50346bc4813
Signed-off-by: Ram Chandra Jangir <quic_rjangir@quicinc.com>
---
 fs/jffs2/dir.c | 36 +++++++++++++++++++++++++++++-------
 1 file changed, 29 insertions(+), 7 deletions(-)

diff --git a/fs/jffs2/dir.c b/fs/jffs2/dir.c
index c0aabbcbfd58..f7d9d427b84f 100644
--- a/fs/jffs2/dir.c
+++ b/fs/jffs2/dir.c
@@ -614,8 +614,8 @@ static int jffs2_rmdir (struct inode *dir_i, struct dentry *dentry)
 	return ret;
 }
 
-static int jffs2_mknod (struct user_namespace *mnt_userns, struct inode *dir_i,
-		        struct dentry *dentry, umode_t mode, dev_t rdev)
+static int __jffs2_mknod (struct user_namespace *mnt_userns, struct inode *dir_i,
+			  struct dentry *dentry, umode_t mode, dev_t rdev, bool whiteout)
 {
 	struct jffs2_inode_info *f, *dir_f;
 	struct jffs2_sb_info *c;
@@ -754,7 +754,11 @@ static int jffs2_mknod (struct user_namespace *mnt_userns, struct inode *dir_i,
 	mutex_unlock(&dir_f->sem);
 	jffs2_complete_reservation(c);
 
-	d_instantiate_new(dentry, inode);
+	if (!whiteout)
+		d_instantiate_new(dentry, inode);
+	else
+		unlock_new_inode(inode);
+
 	return 0;
 
  fail:
@@ -762,6 +766,19 @@ static int jffs2_mknod (struct user_namespace *mnt_userns, struct inode *dir_i,
 	return ret;
 }
 
+static int jffs2_mknod (struct user_namespace *mnt_userns, struct inode *dir_i,
+			  struct dentry *dentry, umode_t mode, dev_t rdev)
+{
+	return __jffs2_mknod(mnt_userns, dir_i, dentry, mode, rdev, false);
+}
+
+static int jffs2_whiteout (struct user_namespace *mnt_userns, struct inode *old_dir,
+			    struct dentry *old_dentry)
+{
+	return __jffs2_mknod(mnt_userns, old_dir, old_dentry, S_IFCHR | WHITEOUT_MODE,
+			     WHITEOUT_DEV, true);
+}
+
 static int jffs2_rename (struct user_namespace *mnt_userns,
 			 struct inode *old_dir_i, struct dentry *old_dentry,
 			 struct inode *new_dir_i, struct dentry *new_dentry,
@@ -773,7 +790,7 @@ static int jffs2_rename (struct user_namespace *mnt_userns,
 	uint8_t type;
 	uint32_t now;
 
-	if (flags & ~RENAME_NOREPLACE)
+	if (flags & ~(RENAME_NOREPLACE|RENAME_WHITEOUT))
 		return -EINVAL;
 
 	/* The VFS will check for us and prevent trying to rename a
@@ -839,9 +856,14 @@ static int jffs2_rename (struct user_namespace *mnt_userns,
 	if (d_is_dir(old_dentry) && !victim_f)
 		inc_nlink(new_dir_i);
 
-	/* Unlink the original */
-	ret = jffs2_do_unlink(c, JFFS2_INODE_INFO(old_dir_i),
-			      old_dentry->d_name.name, old_dentry->d_name.len, NULL, now);
+	if (flags & RENAME_WHITEOUT)
+		/* Replace with whiteout */
+		ret = jffs2_whiteout(mnt_userns, old_dir_i, old_dentry);
+	else
+		/* Unlink the original */
+		ret = jffs2_do_unlink(c, JFFS2_INODE_INFO(old_dir_i),
+				      old_dentry->d_name.name,
+				      old_dentry->d_name.len, NULL, now);
 
 	/* We don't touch inode->i_nlink */
 
-- 
2.17.1

