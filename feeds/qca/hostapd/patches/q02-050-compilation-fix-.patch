From 6ee6c8762d470281fb778bd51daaa640f7bc36b5 Mon Sep 17 00:00:00 2001
From: Pavithra Ganesan <quic_pavigane@quicinc.com>
Date: Wed, 15 Nov 2023 17:20:46 +0530
Subject: [PATCH] Fix compilation error in upgraded package

Signed-off-by: Pavithra Ganesan <quic_pavigane@quicinc.com>

--- a/src/ap/hostapd.c
+++ b/src/ap/hostapd.c
@@ -155,7 +155,10 @@ static void hostapd_reload_bss(struct ho
 			 hapd->iconf->secondary_channel,
 			 hostapd_get_oper_chwidth(hapd->iconf),
 			 hostapd_get_oper_centr_freq_seg0_idx(hapd->iconf),
-			 hostapd_get_oper_centr_freq_seg1_idx(hapd->iconf));
+			 hostapd_get_oper_centr_freq_seg1_idx(hapd->iconf),
+			 hapd->iconf->ru_punct_bitmap,
+			 hapd->iconf->ru_punct_ofdma);
+
 
 	if (hapd->iface->current_mode) {
 		if (hostapd_prepare_rates(hapd->iface, hapd->iface->current_mode)) {
--- a/src/ap/hostapd.h
+++ b/src/ap/hostapd.h
@@ -769,8 +769,8 @@ int hostapd_probe_req_rx(struct hostapd_
 			 int ssi_signal);
 void hostapd_event_ch_switch(struct hostapd_data *hapd, int freq, int ht,
 			     int offset, int width, int cf1, int cf2,
-			     u16 ru_punct_bitmap, u8 ru_punct_ofdma,
-			     u16 punct_bitmap, int finished);
+			     u16 punct_bitmap, u16 ru_punct_bitmap, u8 ru_punct_ofdma,
+			     int finished);
 struct survey_results;
 void hostapd_event_get_survey(struct hostapd_iface *iface,
 			      struct survey_results *survey_results);
--- a/src/ap/ieee802_11_eht.c
+++ b/src/ap/ieee802_11_eht.c
@@ -12,6 +12,7 @@
 #include "hostapd.h"
 #include "sta_info.h"
 #include "ieee802_11.h"
+#include "crypto.h"
 
 
 static u16 ieee80211_eht_ppet_size(u16 ppe_thres_hdr, const u8 *phy_cap_info)
@@ -219,8 +220,8 @@ u8 * hostapd_eid_eht_operation(struct ho
 	if (!hapd->iface->current_mode)
 		return eid;
 
-	if (hapd->iconf->punct_bitmap)
-		elen += EHT_OPER_DISABLED_SUBCHAN_BITMAP_SIZE;
+//	if (hapd->iconf->punct_bitmap)
+//		elen += EHT_OPER_DISABLED_SUBCHAN_BITMAP_SIZE;
 
 	*pos++ = WLAN_EID_EXTENSION;
 	length_pos = pos++;
--- a/src/ap/ubus.c
+++ b/src/ap/ubus.c
@@ -844,11 +844,17 @@ hostapd_switch_chan(struct ubus_context
 				css.freq_params.ht_enabled,
 				css.freq_params.vht_enabled,
 				css.freq_params.he_enabled,
+				css.freq_params.eht_enabled,
 				css.freq_params.sec_channel_offset,
 				chwidth, seg0, seg1,
 				iconf->vht_capab,
 				mode ? &mode->he_capab[IEEE80211_MODE_AP] :
-				NULL, 0);
+				NULL,
+ 				mode ? &mode->eht_capab[IEEE80211_MODE_AP] :
+				NULL,
+				hapd->iconf->he_6ghz_reg_pwr_type,
+				iconf->ru_punct_bitmap,
+				iconf->ru_punct_ofdma);
 
 	for (i = 0; i < hapd->iface->num_bss; i++) {
 		struct hostapd_data *bss = hapd->iface->bss[i];
--- a/src/ap/ubus.h
+++ b/src/ap/ubus.h
@@ -19,6 +19,7 @@ enum hostapd_ubus_event_type {
 struct hostapd_ubus_request {
 	enum hostapd_ubus_event_type type;
 	const struct ieee80211_mgmt *mgmt_frame;
+	const struct hostapd_frame_info *frame_info;
 	const struct ieee802_11_elems *elems;
 	int ssi_signal; /* dBm */
 	const u8 *addr;
--- a/src/ap/wpa_auth_glue.c
+++ b/src/ap/wpa_auth_glue.c
@@ -990,6 +990,7 @@ static int hostapd_wpa_auth_update_vlan(
 			   "Failed to assign VLAN ID %d from wpa_psk_file to "
 			   MACSTR, vlan_id, MAC2STR(sta->addr));
 		return -1;
+	}
 
 	wpa_printf(MSG_INFO,
 		   "Assigned VLAN ID %d from wpa_psk_file to " MACSTR,
--- a/src/drivers/driver.h
+++ b/src/drivers/driver.h
@@ -19,6 +19,7 @@
 
 #define WPA_SUPPLICANT_DRIVER_VERSION 4
 
+#include "drivers/nl80211_copy.h"
 #include "ap/sta_info.h"
 #include "common/defs.h"
 #include "common/ieee802_11_defs.h"
--- a/src/drivers/nl80211_copy.h
+++ b/src/drivers/nl80211_copy.h
@@ -3369,8 +3369,6 @@ enum nl80211_attrs {
 	NL80211_ATTR_MAX_HW_TIMESTAMP_PEERS,
 	NL80211_ATTR_HW_TIMESTAMP_ENABLED,
 
-	NL80211_ATTR_EMA_RNR_ELEMS,
-
 	NL80211_ATTR_HE_MUEDCA_PARAMS,
 
 	NL80211_ATTR_BEACON_TX_MODE,
--- a/wpa_supplicant/wpa_supplicant.c
+++ b/wpa_supplicant/wpa_supplicant.c
@@ -3119,7 +3119,9 @@ skip_80mhz:
 				    freq->sec_channel_offset,
 				    chwidth, seg0, seg1, vht_caps,
 				    &mode->he_capab[ieee80211_mode],
-				    &mode->eht_capab[ieee80211_mode]) != 0)
+				    &mode->eht_capab[ieee80211_mode], 0,
+				    freq->ru_punct_bitmap,
+				    freq->ru_punct_ofdma) != 0)
 		return false;
 
 	*freq = vht_freq;
