--- a/src/drivers/driver_nl80211_scan.c
+++ b/src/drivers/driver_nl80211_scan.c
@@ -423,6 +423,9 @@ int wpa_driver_nl80211_scan(struct i802_
 				goto fail;
 			}
 
+			if (ret == -EBUSY)
+				goto fail;
+
 			/*
 			 * mac80211 does not allow scan requests in AP mode, so
 			 * try to do this in station mode.
--- a/src/ap/acs.h
+++ b/src/ap/acs.h
@@ -15,7 +15,7 @@
 enum hostapd_chan_status acs_init(struct hostapd_iface *iface);
 void acs_cleanup(struct hostapd_iface *iface);
 
-#define ACS_SCAN_RETRY_MAX_COUNT 15
+#define ACS_SCAN_RETRY_MAX_COUNT 50
 #define ACS_SCAN_RETRY_INTERVAL 5
 
 #else /* CONFIG_ACS */
--- a/src/ap/acs.c
+++ b/src/ap/acs.c
@@ -1496,7 +1496,7 @@ static int acs_request_scan(struct hosta
 
 	if (ret == -EBUSY) {
 		iface->acs_num_retries++;
-		wpa_printf(MSG_ERROR, "Failed to request acs scan ret=%d (%s) - try to scan after %d seconds",
+		wpa_printf(MSG_DEBUG, "Failed to request acs scan ret=%d (%s) - try to scan after %d seconds",
 			   ret, strerror(-ret), ACS_SCAN_RETRY_INTERVAL);
 		eloop_cancel_timeout(acs_scan_retry, iface, NULL);
 		eloop_register_timeout(ACS_SCAN_RETRY_INTERVAL, 0,
