From 2df9fc1cbd58551e7061a8352103a134017c3c9e Mon Sep 17 00:00:00 2001
From: Riddhi Aggarwal <quic_riddagga@quicinc.com>
Date: Fri, 1 Sep 2023 10:56:22 +0530
Subject: [PATCH] mtd: rawnand: qcom: Fix out-of-bounds error

The serial training logic iterates through the phase_table array
to look for 3 consecutive phases. Currently, the array size isn't
taken into account and out-of-bounds elements are getting accessed
towards the end of array. Fixed this by ensuring the loop only iterates
through valid memory locations within the array bounds

Change-Id: I47d30b065b89d001dd0199963a07fb4bd3ffcee2
Signed-off-by: Riddhi Aggarwal <quic_riddagga@quicinc.com>
---
 drivers/mtd/nand/raw/qcom_nandc.c | 10 ++++++----
 1 file changed, 6 insertions(+), 4 deletions(-)

diff --git a/drivers/mtd/nand/raw/qcom_nandc.c b/drivers/mtd/nand/raw/qcom_nandc.c
index f6718a6aca8d..76b38aa7d648 100644
--- a/drivers/mtd/nand/raw/qcom_nandc.c
+++ b/drivers/mtd/nand/raw/qcom_nandc.c
@@ -3364,10 +3364,12 @@ static int qspi_get_appropriate_phase(struct qcom_nand_controller *nandc, u8 *ph
 	int i, cnt = 0, phase = 0x0;
 	u8 phase_ranges[TOTAL_NUM_PHASE] = {'\0'};
 
-	for (i = 0; i < phase_count; i++) {
-		if ((phase_table[i] + 1 == phase_table[i + 1]) &&
-		(phase_table[i + 1] + 1 == phase_table[i + 2]))
-			phase_ranges[cnt++] = phase_table[i + 1];
+	if ( phase_count >= 3) {
+		for (i = 0; i < phase_count -2; i++) {
+			if ((phase_table[i] + 1 == phase_table[i + 1]) &&
+			(phase_table[i + 1] + 1 == phase_table[i + 2]))
+				phase_ranges[cnt++] = phase_table[i + 1];
+		}
 	}
 
 	/* Filter out middle phase */
-- 
2.34.1

