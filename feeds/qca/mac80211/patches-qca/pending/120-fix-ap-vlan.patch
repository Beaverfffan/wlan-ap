--- a/net/mac80211/chan.c
+++ b/net/mac80211/chan.c
@@ -12,6 +12,10 @@
 #include "driver-ops.h"
 #include "rate.h"
 
+static void
+__ieee80211_link_copy_chanctx_to_vlans(struct ieee80211_link_data *link,
+				       bool clear);
+
 static int ieee80211_chanctx_num_assigned(struct ieee80211_local *local,
 					  struct ieee80211_chanctx *ctx)
 {
@@ -950,6 +954,9 @@ out:
 		ieee80211_recalc_chanctx_min_def(local, new_ctx, NULL);
 	}
 
+	if (sdata->vif.type == NL80211_IFTYPE_AP)
+		__ieee80211_link_copy_chanctx_to_vlans(link, false);
+
 	if (sdata->vif.type != NL80211_IFTYPE_P2P_DEVICE &&
 	    sdata->vif.type != NL80211_IFTYPE_MONITOR)
 		ieee80211_vif_cfg_change_notify(sdata, BSS_CHANGED_IDLE);
@@ -1087,8 +1094,6 @@ __ieee80211_link_copy_chanctx_to_vlans(s
 	 */
 	conf = rcu_dereference_protected(link_conf->chanctx_conf,
 					 lockdep_is_held(&local->chanctx_mtx));
-	WARN_ON(!conf);
-
 	if (clear)
 		conf = NULL;
 
@@ -1096,8 +1101,6 @@ __ieee80211_link_copy_chanctx_to_vlans(s
 	list_for_each_entry(vlan, &sdata->u.ap.vlans, u.vlan.list) {
 		struct ieee80211_bss_conf *vlan_conf;
 
-		if (!(vlan->vif.valid_links & BIT(link_id)))
-			continue;
 		vlan_conf = rcu_dereference(vlan->vif.link_conf[link_id]);
 		if (WARN_ON(!vlan_conf))
 			continue;
@@ -1307,8 +1310,6 @@ ieee80211_link_update_chandef(struct iee
 	list_for_each_entry(vlan, &sdata->u.ap.vlans, u.vlan.list) {
 		struct ieee80211_bss_conf *vlan_conf;
 
-		if (!(vlan->vif.valid_links & BIT(link_id)))
-			continue;
 		vlan_conf = rcu_dereference(vlan->vif.link_conf[link_id]);
 		if (WARN_ON(!vlan_conf))
 			continue;
