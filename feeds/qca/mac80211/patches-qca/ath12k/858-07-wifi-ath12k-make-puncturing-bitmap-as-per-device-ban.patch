From ceaeb68e340bb2d6b648b95e1d597c5040e3126a Mon Sep 17 00:00:00 2001
From: Shivani Tambatkar <quic_stambatk@quicinc.com>
Date: Fri, 1 Dec 2023 10:36:04 -0800
Subject: [PATCH 7/8] wifi: ath12k: make puncturing bitmap as per device
 bandwidth

Puncturing bitmap must be calculated over the device bandwidth
parameters when these are different than the operating bandwidth
parameters. Shift the puncturing bitmap depending on the location
of the operating bandwidth in the device bandwidth.

Signed-off-by: Shivani Tambatkar <quic_stambatk@quicinc.com>
---
 drivers/net/wireless/ath/ath12k/wmi.c | 123 ++++++++++++++++++--------
 drivers/net/wireless/ath/ath12k/wmi.h |   6 ++
 2 files changed, 93 insertions(+), 36 deletions(-)

--- a/drivers/net/wireless/ath/ath12k/wmi.c
+++ b/drivers/net/wireless/ath/ath12k/wmi.c
@@ -1615,6 +1615,32 @@ ath12k_wmi_check_device_present(u32 widt
 		center_freq_device != center_freq_oper);
 }
 
+static u32 ath12k_wmi_set_ru_punc_bitmap_device(u32 oper_freq,
+						enum nl80211_chan_width width_device,
+						u32 device_freq,
+						u32 oper_ru_punct_bitmap)
+{
+	u32 device_bitmap = oper_ru_punct_bitmap;
+
+	if (oper_freq == device_freq || oper_freq < device_freq)
+		return device_bitmap;
+
+	switch (width_device) {
+	case NL80211_CHAN_WIDTH_160:
+		if (oper_freq > device_freq)
+			device_bitmap = (oper_ru_punct_bitmap << 4) | 0x0000FF0F;
+		break;
+	case NL80211_CHAN_WIDTH_320:
+		if (oper_freq > device_freq)
+			device_bitmap = (oper_ru_punct_bitmap << 8) | 0x000000FF;
+		break;
+	default:
+		return device_bitmap;
+	}
+
+	return device_bitmap;
+}
+
 static void ath12k_wmi_set_wmi_channel_device(struct ath12k_wmi_channel_params *chan_device,
 					      struct wmi_channel_arg *channel,
 					      u32 cf_device, u32 width_device)
@@ -1788,6 +1814,13 @@ int ath12k_wmi_vdev_start(struct ath12k
 	cmd->he_ops = cpu_to_le32(arg->he_ops);
 	cmd->mbssid_flags = cpu_to_le32(arg->mbssid_flags);
 	cmd->mbssid_tx_vdev_id = cpu_to_le32(arg->mbssid_tx_vdev_id);
+
+	if (device_params_present) {
+		arg->ru_punct_bitmap = ath12k_wmi_set_ru_punc_bitmap_device(arg->channel.freq,
+									    arg->width_device,
+									    arg->center_freq_device,
+									    arg->ru_punct_bitmap);
+	}
 	cmd->ru_punct_bitmap = cpu_to_le32(arg->ru_punct_bitmap);
 
 	if (!restart) {
@@ -1821,7 +1854,6 @@ int ath12k_wmi_vdev_start(struct ath12k
 	/* Note: This is a nested TLV containing:
 	 * [wmi_tlv][wmi_p2p_noa_descriptor][wmi_tlv]..
 	 */
-
 	ptr += sizeof(*tlv);
 
 	if (ml_arg_size) {
@@ -14917,6 +14949,13 @@ int ath12k_wmi_pdev_multiple_vdev_restar
 						 sizeof(*cmd));
 	cmd->pdev_id = cpu_to_le32(ar->pdev->pdev_id);
 	cmd->num_vdevs = cpu_to_le32(arg->vdev_ids.id_len);
+
+	if (device_params_present) {
+		arg->ru_punct_bitmap =
+		ath12k_wmi_set_ru_punc_bitmap_device(arg->channel.freq, arg->width_device,
+						     arg->center_freq_device,
+						     arg->ru_punct_bitmap);
+	}
 	cmd->puncture_20mhz_bitmap = cpu_to_le32(arg->ru_punct_bitmap);
 
 	cmd->flags = cpu_to_le32(WMI_MVR_RESPONSE_SUPPORT_EXPECTED);
